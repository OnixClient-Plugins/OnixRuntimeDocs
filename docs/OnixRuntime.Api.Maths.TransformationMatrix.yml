### YamlMime:ManagedReference
items:
- uid: OnixRuntime.Api.Maths.TransformationMatrix
  commentId: T:OnixRuntime.Api.Maths.TransformationMatrix
  id: TransformationMatrix
  parent: OnixRuntime.Api.Maths
  children:
  - OnixRuntime.Api.Maths.TransformationMatrix.#ctor
  - OnixRuntime.Api.Maths.TransformationMatrix.Identity
  - OnixRuntime.Api.Maths.TransformationMatrix.Multiply(OnixRuntime.Api.Maths.Quaternion)
  - OnixRuntime.Api.Maths.TransformationMatrix.Multiply(OnixRuntime.Api.Maths.TransformationMatrix)
  - OnixRuntime.Api.Maths.TransformationMatrix.MultiplyInplace(OnixRuntime.Api.Maths.Quaternion)
  - OnixRuntime.Api.Maths.TransformationMatrix.MultiplyInplace(OnixRuntime.Api.Maths.TransformationMatrix)
  - OnixRuntime.Api.Maths.TransformationMatrix.Rotate(System.Single)
  - OnixRuntime.Api.Maths.TransformationMatrix.Rotate(System.Single,OnixRuntime.Api.Maths.Vec3)
  - OnixRuntime.Api.Maths.TransformationMatrix.Rotate(System.Single,System.Single,System.Single,System.Single)
  - OnixRuntime.Api.Maths.TransformationMatrix.RotateX(System.Single)
  - OnixRuntime.Api.Maths.TransformationMatrix.RotateY(System.Single)
  - OnixRuntime.Api.Maths.TransformationMatrix.RotateZ(System.Single)
  - OnixRuntime.Api.Maths.TransformationMatrix.Scale(OnixRuntime.Api.Maths.Vec2,System.Single)
  - OnixRuntime.Api.Maths.TransformationMatrix.Scale(OnixRuntime.Api.Maths.Vec3)
  - OnixRuntime.Api.Maths.TransformationMatrix.Scale(System.Single)
  - OnixRuntime.Api.Maths.TransformationMatrix.Scale(System.Single,System.Single,System.Single)
  - OnixRuntime.Api.Maths.TransformationMatrix.Transform(OnixRuntime.Api.Maths.Vec2)
  - OnixRuntime.Api.Maths.TransformationMatrix.Transform(OnixRuntime.Api.Maths.Vec3)
  - OnixRuntime.Api.Maths.TransformationMatrix.Transform(System.Single,System.Single)
  - OnixRuntime.Api.Maths.TransformationMatrix.Transform(System.Single,System.Single,System.Single)
  - OnixRuntime.Api.Maths.TransformationMatrix.Translate(OnixRuntime.Api.Maths.Vec2,System.Single)
  - OnixRuntime.Api.Maths.TransformationMatrix.Translate(OnixRuntime.Api.Maths.Vec3)
  - OnixRuntime.Api.Maths.TransformationMatrix.Translate(System.Single,System.Single,System.Single)
  - OnixRuntime.Api.Maths.TransformationMatrix.TranslateWorldPosition(OnixRuntime.Api.Maths.Vec3)
  - OnixRuntime.Api.Maths.TransformationMatrix.TranslateWorldPosition(System.Single,System.Single,System.Single)
  - OnixRuntime.Api.Maths.TransformationMatrix.op_Multiply(OnixRuntime.Api.Maths.TransformationMatrix,OnixRuntime.Api.Maths.Quaternion)
  - OnixRuntime.Api.Maths.TransformationMatrix.op_Multiply(OnixRuntime.Api.Maths.TransformationMatrix,OnixRuntime.Api.Maths.TransformationMatrix)
  langs:
  - csharp
  - vb
  name: TransformationMatrix
  nameWithType: TransformationMatrix
  fullName: OnixRuntime.Api.Maths.TransformationMatrix
  type: Struct
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: TransformationMatrix
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 6
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Represents a 4x4 transformation matrix for 2D/3D graphics, supporting translation, scaling, rotation, and matrix multiplication.
  example: []
  syntax:
    content: public struct TransformationMatrix
    content.vb: Public Structure TransformationMatrix
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.#ctor
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.#ctor
  id: '#ctor'
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: TransformationMatrix()
  nameWithType: TransformationMatrix.TransformationMatrix()
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.TransformationMatrix()
  type: Constructor
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: .ctor
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 6
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Represents a 4x4 transformation matrix for 2D/3D graphics, supporting translation, scaling, rotation, and matrix multiplication.
  example: []
  syntax:
    content: public TransformationMatrix()
    content.vb: Public Sub New()
  overload: OnixRuntime.Api.Maths.TransformationMatrix.#ctor*
  nameWithType.vb: TransformationMatrix.New()
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.New()
  name.vb: New()
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Identity
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Identity
  id: Identity
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Identity()
  nameWithType: TransformationMatrix.Identity()
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Identity()
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Identity
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 36
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns the identity transformation matrix.
  example: []
  syntax:
    content: public static TransformationMatrix Identity()
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function Identity() As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Identity*
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Translate(System.Single,System.Single,System.Single)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Translate(System.Single,System.Single,System.Single)
  id: Translate(System.Single,System.Single,System.Single)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Translate(float, float, float)
  nameWithType: TransformationMatrix.Translate(float, float, float)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Translate(float, float, float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Translate
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 44
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns a translation matrix for the given x, y, z values.
  example: []
  syntax:
    content: public static TransformationMatrix Translate(float x, float y, float z = 0)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function Translate(x As Single, y As Single, z As Single = 0) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Translate*
  nameWithType.vb: TransformationMatrix.Translate(Single, Single, Single)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.Translate(Single, Single, Single)
  name.vb: Translate(Single, Single, Single)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.TranslateWorldPosition(OnixRuntime.Api.Maths.Vec3)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.TranslateWorldPosition(OnixRuntime.Api.Maths.Vec3)
  id: TranslateWorldPosition(OnixRuntime.Api.Maths.Vec3)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: TranslateWorldPosition(Vec3)
  nameWithType: TransformationMatrix.TranslateWorldPosition(Vec3)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.TranslateWorldPosition(OnixRuntime.Api.Maths.Vec3)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: TranslateWorldPosition
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 55
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: >-
    Returns a translation matrix for the given x, y, z values in the world.

    this function adds the inverted origin so you don't have to do it manually.

    Doing the subtraction before multiplying the matrix fixes the precision error that appear scarily quickly otherwise.

    To use this you would do all your normal matrix math at the origin as normal and position it by multiplying the result by this matrix.
  example: []
  syntax:
    content: public static TransformationMatrix TranslateWorldPosition(Vec3 position)
    parameters:
    - id: position
      type: OnixRuntime.Api.Maths.Vec3
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function TranslateWorldPosition(position As Vec3) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.TranslateWorldPosition*
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Translate(OnixRuntime.Api.Maths.Vec2,System.Single)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Translate(OnixRuntime.Api.Maths.Vec2,System.Single)
  id: Translate(OnixRuntime.Api.Maths.Vec2,System.Single)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Translate(Vec2, float)
  nameWithType: TransformationMatrix.Translate(Vec2, float)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Translate(OnixRuntime.Api.Maths.Vec2, float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Translate
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 59
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns a translation matrix for the given 2D position and optional z value.
  example: []
  syntax:
    content: public static TransformationMatrix Translate(Vec2 position2D, float z = 0)
    parameters:
    - id: position2D
      type: OnixRuntime.Api.Maths.Vec2
    - id: z
      type: System.Single
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function Translate(position2D As Vec2, z As Single = 0) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Translate*
  nameWithType.vb: TransformationMatrix.Translate(Vec2, Single)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.Translate(OnixRuntime.Api.Maths.Vec2, Single)
  name.vb: Translate(Vec2, Single)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Translate(OnixRuntime.Api.Maths.Vec3)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Translate(OnixRuntime.Api.Maths.Vec3)
  id: Translate(OnixRuntime.Api.Maths.Vec3)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Translate(Vec3)
  nameWithType: TransformationMatrix.Translate(Vec3)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Translate(OnixRuntime.Api.Maths.Vec3)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Translate
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 63
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns a translation matrix for the given 3D position.
  example: []
  syntax:
    content: public static TransformationMatrix Translate(Vec3 position)
    parameters:
    - id: position
      type: OnixRuntime.Api.Maths.Vec3
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function Translate(position As Vec3) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Translate*
- uid: OnixRuntime.Api.Maths.TransformationMatrix.TranslateWorldPosition(System.Single,System.Single,System.Single)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.TranslateWorldPosition(System.Single,System.Single,System.Single)
  id: TranslateWorldPosition(System.Single,System.Single,System.Single)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: TranslateWorldPosition(float, float, float)
  nameWithType: TransformationMatrix.TranslateWorldPosition(float, float, float)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.TranslateWorldPosition(float, float, float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: TranslateWorldPosition
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 71
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: >-
    Returns a translation matrix for the given x, y, z values in the world.

    this function adds the inverted origin so you don't have to do it manually.

    Doing the subtraction before multiplying the matrix fixes the precision error that appear scarily quickly otherwise.

    To use this you would do all your normal matrix math at the origin as normal and position it by multiplying the result by this matrix.
  example: []
  syntax:
    content: public static TransformationMatrix TranslateWorldPosition(float x, float y, float z = 0)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function TranslateWorldPosition(x As Single, y As Single, z As Single = 0) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.TranslateWorldPosition*
  nameWithType.vb: TransformationMatrix.TranslateWorldPosition(Single, Single, Single)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.TranslateWorldPosition(Single, Single, Single)
  name.vb: TranslateWorldPosition(Single, Single, Single)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Scale(System.Single,System.Single,System.Single)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Scale(System.Single,System.Single,System.Single)
  id: Scale(System.Single,System.Single,System.Single)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Scale(float, float, float)
  nameWithType: TransformationMatrix.Scale(float, float, float)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Scale(float, float, float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Scale
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 80
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns a scaling matrix for the given x, y, z values.
  example: []
  syntax:
    content: public static TransformationMatrix Scale(float x, float y, float z = 1)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function Scale(x As Single, y As Single, z As Single = 1) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Scale*
  nameWithType.vb: TransformationMatrix.Scale(Single, Single, Single)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.Scale(Single, Single, Single)
  name.vb: Scale(Single, Single, Single)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Scale(OnixRuntime.Api.Maths.Vec2,System.Single)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Scale(OnixRuntime.Api.Maths.Vec2,System.Single)
  id: Scale(OnixRuntime.Api.Maths.Vec2,System.Single)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Scale(Vec2, float)
  nameWithType: TransformationMatrix.Scale(Vec2, float)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Scale(OnixRuntime.Api.Maths.Vec2, float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Scale
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 88
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns a scaling matrix for the given 2D scale and optional z value.
  example: []
  syntax:
    content: public static TransformationMatrix Scale(Vec2 scale2D, float z = 1)
    parameters:
    - id: scale2D
      type: OnixRuntime.Api.Maths.Vec2
    - id: z
      type: System.Single
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function Scale(scale2D As Vec2, z As Single = 1) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Scale*
  nameWithType.vb: TransformationMatrix.Scale(Vec2, Single)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.Scale(OnixRuntime.Api.Maths.Vec2, Single)
  name.vb: Scale(Vec2, Single)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Scale(OnixRuntime.Api.Maths.Vec3)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Scale(OnixRuntime.Api.Maths.Vec3)
  id: Scale(OnixRuntime.Api.Maths.Vec3)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Scale(Vec3)
  nameWithType: TransformationMatrix.Scale(Vec3)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Scale(OnixRuntime.Api.Maths.Vec3)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Scale
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 92
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns a scaling matrix for the given 3D scale.
  example: []
  syntax:
    content: public static TransformationMatrix Scale(Vec3 scale)
    parameters:
    - id: scale
      type: OnixRuntime.Api.Maths.Vec3
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function Scale(scale As Vec3) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Scale*
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Scale(System.Single)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Scale(System.Single)
  id: Scale(System.Single)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Scale(float)
  nameWithType: TransformationMatrix.Scale(float)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Scale(float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Scale
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 96
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns a uniform scaling matrix for the given scale value.
  example: []
  syntax:
    content: public static TransformationMatrix Scale(float scale)
    parameters:
    - id: scale
      type: System.Single
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function Scale(scale As Single) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Scale*
  nameWithType.vb: TransformationMatrix.Scale(Single)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.Scale(Single)
  name.vb: Scale(Single)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Rotate(System.Single,System.Single,System.Single,System.Single)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Rotate(System.Single,System.Single,System.Single,System.Single)
  id: Rotate(System.Single,System.Single,System.Single,System.Single)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Rotate(float, float, float, float)
  nameWithType: TransformationMatrix.Rotate(float, float, float, float)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Rotate(float, float, float, float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Rotate
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 105
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns a rotation matrix for the given angle (degrees) and axis.
  example: []
  syntax:
    content: public static TransformationMatrix Rotate(float angle, float axisX, float axisY, float axisZ = 0)
    parameters:
    - id: angle
      type: System.Single
      description: Angle in degrees.
    - id: axisX
      type: System.Single
      description: X component of the axis.
    - id: axisY
      type: System.Single
      description: Y component of the axis.
    - id: axisZ
      type: System.Single
      description: Z component of the axis.
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function Rotate(angle As Single, axisX As Single, axisY As Single, axisZ As Single = 0) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Rotate*
  nameWithType.vb: TransformationMatrix.Rotate(Single, Single, Single, Single)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.Rotate(Single, Single, Single, Single)
  name.vb: Rotate(Single, Single, Single, Single)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Rotate(System.Single,OnixRuntime.Api.Maths.Vec3)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Rotate(System.Single,OnixRuntime.Api.Maths.Vec3)
  id: Rotate(System.Single,OnixRuntime.Api.Maths.Vec3)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Rotate(float, Vec3)
  nameWithType: TransformationMatrix.Rotate(float, Vec3)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Rotate(float, OnixRuntime.Api.Maths.Vec3)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Rotate
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 113
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns a rotation matrix for the given angle (degrees) and axis vector.
  example: []
  syntax:
    content: public static TransformationMatrix Rotate(float angle, Vec3 axis)
    parameters:
    - id: angle
      type: System.Single
    - id: axis
      type: OnixRuntime.Api.Maths.Vec3
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function Rotate(angle As Single, axis As Vec3) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Rotate*
  nameWithType.vb: TransformationMatrix.Rotate(Single, Vec3)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.Rotate(Single, OnixRuntime.Api.Maths.Vec3)
  name.vb: Rotate(Single, Vec3)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Rotate(System.Single)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Rotate(System.Single)
  id: Rotate(System.Single)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Rotate(float)
  nameWithType: TransformationMatrix.Rotate(float)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Rotate(float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Rotate
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 117
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns a rotation matrix for the given angle (degrees) around the Z axis.
  example: []
  syntax:
    content: public static TransformationMatrix Rotate(float angle)
    parameters:
    - id: angle
      type: System.Single
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function Rotate(angle As Single) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Rotate*
  nameWithType.vb: TransformationMatrix.Rotate(Single)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.Rotate(Single)
  name.vb: Rotate(Single)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.RotateX(System.Single)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.RotateX(System.Single)
  id: RotateX(System.Single)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: RotateX(float)
  nameWithType: TransformationMatrix.RotateX(float)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.RotateX(float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: RotateX
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 121
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns a rotation matrix for the given angle (degrees) around the X axis.
  example: []
  syntax:
    content: public static TransformationMatrix RotateX(float angle)
    parameters:
    - id: angle
      type: System.Single
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function RotateX(angle As Single) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.RotateX*
  nameWithType.vb: TransformationMatrix.RotateX(Single)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.RotateX(Single)
  name.vb: RotateX(Single)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.RotateY(System.Single)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.RotateY(System.Single)
  id: RotateY(System.Single)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: RotateY(float)
  nameWithType: TransformationMatrix.RotateY(float)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.RotateY(float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: RotateY
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 125
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns a rotation matrix for the given angle (degrees) around the Y axis.
  example: []
  syntax:
    content: public static TransformationMatrix RotateY(float angle)
    parameters:
    - id: angle
      type: System.Single
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function RotateY(angle As Single) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.RotateY*
  nameWithType.vb: TransformationMatrix.RotateY(Single)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.RotateY(Single)
  name.vb: RotateY(Single)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.RotateZ(System.Single)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.RotateZ(System.Single)
  id: RotateZ(System.Single)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: RotateZ(float)
  nameWithType: TransformationMatrix.RotateZ(float)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.RotateZ(float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: RotateZ
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 129
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns a rotation matrix for the given angle (degrees) around the Z axis.
  example: []
  syntax:
    content: public static TransformationMatrix RotateZ(float angle)
    parameters:
    - id: angle
      type: System.Single
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Function RotateZ(angle As Single) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.RotateZ*
  nameWithType.vb: TransformationMatrix.RotateZ(Single)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.RotateZ(Single)
  name.vb: RotateZ(Single)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Transform(System.Single,System.Single,System.Single)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Transform(System.Single,System.Single,System.Single)
  id: Transform(System.Single,System.Single,System.Single)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Transform(float, float, float)
  nameWithType: TransformationMatrix.Transform(float, float, float)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Transform(float, float, float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Transform
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 134
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Transforms a 3D point by this matrix.
  example: []
  syntax:
    content: public Vec3 Transform(float x, float y, float z)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    return:
      type: OnixRuntime.Api.Maths.Vec3
    content.vb: Public Function Transform(x As Single, y As Single, z As Single) As Vec3
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Transform*
  nameWithType.vb: TransformationMatrix.Transform(Single, Single, Single)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.Transform(Single, Single, Single)
  name.vb: Transform(Single, Single, Single)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Transform(OnixRuntime.Api.Maths.Vec3)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Transform(OnixRuntime.Api.Maths.Vec3)
  id: Transform(OnixRuntime.Api.Maths.Vec3)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Transform(Vec3)
  nameWithType: TransformationMatrix.Transform(Vec3)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Transform(OnixRuntime.Api.Maths.Vec3)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Transform
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 138
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Transforms a 3D vector by this matrix.
  example: []
  syntax:
    content: public Vec3 Transform(Vec3 position)
    parameters:
    - id: position
      type: OnixRuntime.Api.Maths.Vec3
    return:
      type: OnixRuntime.Api.Maths.Vec3
    content.vb: Public Function Transform(position As Vec3) As Vec3
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Transform*
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Transform(System.Single,System.Single)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Transform(System.Single,System.Single)
  id: Transform(System.Single,System.Single)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Transform(float, float)
  nameWithType: TransformationMatrix.Transform(float, float)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Transform(float, float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Transform
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 142
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Transforms a 2D point by this matrix.
  example: []
  syntax:
    content: public Vec2 Transform(float x, float y)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: OnixRuntime.Api.Maths.Vec2
    content.vb: Public Function Transform(x As Single, y As Single) As Vec2
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Transform*
  nameWithType.vb: TransformationMatrix.Transform(Single, Single)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.Transform(Single, Single)
  name.vb: Transform(Single, Single)
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Transform(OnixRuntime.Api.Maths.Vec2)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Transform(OnixRuntime.Api.Maths.Vec2)
  id: Transform(OnixRuntime.Api.Maths.Vec2)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Transform(Vec2)
  nameWithType: TransformationMatrix.Transform(Vec2)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Transform(OnixRuntime.Api.Maths.Vec2)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Transform
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 146
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Transforms a 2D vector by this matrix.
  example: []
  syntax:
    content: public Vec2 Transform(Vec2 position)
    parameters:
    - id: position
      type: OnixRuntime.Api.Maths.Vec2
    return:
      type: OnixRuntime.Api.Maths.Vec2
    content.vb: Public Function Transform(position As Vec2) As Vec2
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Transform*
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Multiply(OnixRuntime.Api.Maths.TransformationMatrix)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Multiply(OnixRuntime.Api.Maths.TransformationMatrix)
  id: Multiply(OnixRuntime.Api.Maths.TransformationMatrix)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Multiply(TransformationMatrix)
  nameWithType: TransformationMatrix.Multiply(TransformationMatrix)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Multiply(OnixRuntime.Api.Maths.TransformationMatrix)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Multiply
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 151
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns the product of this matrix and another matrix.
  example: []
  syntax:
    content: public TransformationMatrix Multiply(TransformationMatrix other)
    parameters:
    - id: other
      type: OnixRuntime.Api.Maths.TransformationMatrix
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Function Multiply(other As TransformationMatrix) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Multiply*
- uid: OnixRuntime.Api.Maths.TransformationMatrix.MultiplyInplace(OnixRuntime.Api.Maths.TransformationMatrix)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.MultiplyInplace(OnixRuntime.Api.Maths.TransformationMatrix)
  id: MultiplyInplace(OnixRuntime.Api.Maths.TransformationMatrix)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: MultiplyInplace(TransformationMatrix)
  nameWithType: TransformationMatrix.MultiplyInplace(TransformationMatrix)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.MultiplyInplace(OnixRuntime.Api.Maths.TransformationMatrix)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: MultiplyInplace
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 159
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Multiplies this matrix by another matrix in place.
  example: []
  syntax:
    content: public TransformationMatrix MultiplyInplace(TransformationMatrix other)
    parameters:
    - id: other
      type: OnixRuntime.Api.Maths.TransformationMatrix
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Function MultiplyInplace(other As TransformationMatrix) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.MultiplyInplace*
- uid: OnixRuntime.Api.Maths.TransformationMatrix.op_Multiply(OnixRuntime.Api.Maths.TransformationMatrix,OnixRuntime.Api.Maths.TransformationMatrix)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.op_Multiply(OnixRuntime.Api.Maths.TransformationMatrix,OnixRuntime.Api.Maths.TransformationMatrix)
  id: op_Multiply(OnixRuntime.Api.Maths.TransformationMatrix,OnixRuntime.Api.Maths.TransformationMatrix)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: operator *(TransformationMatrix, TransformationMatrix)
  nameWithType: TransformationMatrix.operator *(TransformationMatrix, TransformationMatrix)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.operator *(OnixRuntime.Api.Maths.TransformationMatrix, OnixRuntime.Api.Maths.TransformationMatrix)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Multiply
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 166
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Multiplies two transformation matrices.
  example: []
  syntax:
    content: public static TransformationMatrix operator *(TransformationMatrix left, TransformationMatrix right)
    parameters:
    - id: left
      type: OnixRuntime.Api.Maths.TransformationMatrix
    - id: right
      type: OnixRuntime.Api.Maths.TransformationMatrix
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Operator *(left As TransformationMatrix, right As TransformationMatrix) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.op_Multiply*
  nameWithType.vb: TransformationMatrix.*(TransformationMatrix, TransformationMatrix)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.*(OnixRuntime.Api.Maths.TransformationMatrix, OnixRuntime.Api.Maths.TransformationMatrix)
  name.vb: '*(TransformationMatrix, TransformationMatrix)'
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Multiply(OnixRuntime.Api.Maths.Quaternion)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.Multiply(OnixRuntime.Api.Maths.Quaternion)
  id: Multiply(OnixRuntime.Api.Maths.Quaternion)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: Multiply(Quaternion)
  nameWithType: TransformationMatrix.Multiply(Quaternion)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Multiply(OnixRuntime.Api.Maths.Quaternion)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Multiply
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 170
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Returns the product of this matrix and a quaternion (applies the quaternion rotation).
  example: []
  syntax:
    content: public TransformationMatrix Multiply(Quaternion rotation)
    parameters:
    - id: rotation
      type: OnixRuntime.Api.Maths.Quaternion
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Function Multiply(rotation As Quaternion) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.Multiply*
- uid: OnixRuntime.Api.Maths.TransformationMatrix.MultiplyInplace(OnixRuntime.Api.Maths.Quaternion)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.MultiplyInplace(OnixRuntime.Api.Maths.Quaternion)
  id: MultiplyInplace(OnixRuntime.Api.Maths.Quaternion)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: MultiplyInplace(Quaternion)
  nameWithType: TransformationMatrix.MultiplyInplace(Quaternion)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.MultiplyInplace(OnixRuntime.Api.Maths.Quaternion)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: MultiplyInplace
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 178
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Multiplies this matrix by a quaternion in place (applies the quaternion rotation).
  example: []
  syntax:
    content: public TransformationMatrix MultiplyInplace(Quaternion rotation)
    parameters:
    - id: rotation
      type: OnixRuntime.Api.Maths.Quaternion
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Function MultiplyInplace(rotation As Quaternion) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.MultiplyInplace*
- uid: OnixRuntime.Api.Maths.TransformationMatrix.op_Multiply(OnixRuntime.Api.Maths.TransformationMatrix,OnixRuntime.Api.Maths.Quaternion)
  commentId: M:OnixRuntime.Api.Maths.TransformationMatrix.op_Multiply(OnixRuntime.Api.Maths.TransformationMatrix,OnixRuntime.Api.Maths.Quaternion)
  id: op_Multiply(OnixRuntime.Api.Maths.TransformationMatrix,OnixRuntime.Api.Maths.Quaternion)
  parent: OnixRuntime.Api.Maths.TransformationMatrix
  langs:
  - csharp
  - vb
  name: operator *(TransformationMatrix, Quaternion)
  nameWithType: TransformationMatrix.operator *(TransformationMatrix, Quaternion)
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.operator *(OnixRuntime.Api.Maths.TransformationMatrix, OnixRuntime.Api.Maths.Quaternion)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Api/Maths/TransformationMatrix.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Multiply
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Maths/TransformationMatrix.cs
    startLine: 185
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Maths
  summary: Multiplies a transformation matrix by a quaternion.
  example: []
  syntax:
    content: public static TransformationMatrix operator *(TransformationMatrix left, Quaternion right)
    parameters:
    - id: left
      type: OnixRuntime.Api.Maths.TransformationMatrix
    - id: right
      type: OnixRuntime.Api.Maths.Quaternion
    return:
      type: OnixRuntime.Api.Maths.TransformationMatrix
    content.vb: Public Shared Operator *(left As TransformationMatrix, right As Quaternion) As TransformationMatrix
  overload: OnixRuntime.Api.Maths.TransformationMatrix.op_Multiply*
  nameWithType.vb: TransformationMatrix.*(TransformationMatrix, Quaternion)
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.*(OnixRuntime.Api.Maths.TransformationMatrix, OnixRuntime.Api.Maths.Quaternion)
  name.vb: '*(TransformationMatrix, Quaternion)'
references:
- uid: OnixRuntime.Api.Maths
  commentId: N:OnixRuntime.Api.Maths
  href: OnixRuntime.html
  name: OnixRuntime.Api.Maths
  nameWithType: OnixRuntime.Api.Maths
  fullName: OnixRuntime.Api.Maths
  spec.csharp:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Api
    name: Api
    href: OnixRuntime.Api.html
  - name: .
  - uid: OnixRuntime.Api.Maths
    name: Maths
    href: OnixRuntime.Api.Maths.html
  spec.vb:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Api
    name: Api
    href: OnixRuntime.Api.html
  - name: .
  - uid: OnixRuntime.Api.Maths
    name: Maths
    href: OnixRuntime.Api.Maths.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OnixRuntime.Api.Maths.TransformationMatrix.#ctor*
  commentId: Overload:OnixRuntime.Api.Maths.TransformationMatrix.#ctor
  href: OnixRuntime.Api.Maths.TransformationMatrix.html#OnixRuntime_Api_Maths_TransformationMatrix__ctor
  name: TransformationMatrix
  nameWithType: TransformationMatrix.TransformationMatrix
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.TransformationMatrix
  nameWithType.vb: TransformationMatrix.New
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.New
  name.vb: New
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Identity*
  commentId: Overload:OnixRuntime.Api.Maths.TransformationMatrix.Identity
  href: OnixRuntime.Api.Maths.TransformationMatrix.html#OnixRuntime_Api_Maths_TransformationMatrix_Identity
  name: Identity
  nameWithType: TransformationMatrix.Identity
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Identity
- uid: OnixRuntime.Api.Maths.TransformationMatrix
  commentId: T:OnixRuntime.Api.Maths.TransformationMatrix
  parent: OnixRuntime.Api.Maths
  href: OnixRuntime.Api.Maths.TransformationMatrix.html
  name: TransformationMatrix
  nameWithType: TransformationMatrix
  fullName: OnixRuntime.Api.Maths.TransformationMatrix
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Translate*
  commentId: Overload:OnixRuntime.Api.Maths.TransformationMatrix.Translate
  href: OnixRuntime.Api.Maths.TransformationMatrix.html#OnixRuntime_Api_Maths_TransformationMatrix_Translate_System_Single_System_Single_System_Single_
  name: Translate
  nameWithType: TransformationMatrix.Translate
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Translate
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OnixRuntime.Api.Maths.TransformationMatrix.TranslateWorldPosition*
  commentId: Overload:OnixRuntime.Api.Maths.TransformationMatrix.TranslateWorldPosition
  href: OnixRuntime.Api.Maths.TransformationMatrix.html#OnixRuntime_Api_Maths_TransformationMatrix_TranslateWorldPosition_OnixRuntime_Api_Maths_Vec3_
  name: TranslateWorldPosition
  nameWithType: TransformationMatrix.TranslateWorldPosition
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.TranslateWorldPosition
- uid: OnixRuntime.Api.Maths.Vec3
  commentId: T:OnixRuntime.Api.Maths.Vec3
  parent: OnixRuntime.Api.Maths
  href: OnixRuntime.Api.Maths.Vec3.html
  name: Vec3
  nameWithType: Vec3
  fullName: OnixRuntime.Api.Maths.Vec3
- uid: OnixRuntime.Api.Maths.Vec2
  commentId: T:OnixRuntime.Api.Maths.Vec2
  parent: OnixRuntime.Api.Maths
  href: OnixRuntime.Api.Maths.Vec2.html
  name: Vec2
  nameWithType: Vec2
  fullName: OnixRuntime.Api.Maths.Vec2
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Scale*
  commentId: Overload:OnixRuntime.Api.Maths.TransformationMatrix.Scale
  href: OnixRuntime.Api.Maths.TransformationMatrix.html#OnixRuntime_Api_Maths_TransformationMatrix_Scale_System_Single_System_Single_System_Single_
  name: Scale
  nameWithType: TransformationMatrix.Scale
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Scale
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Rotate*
  commentId: Overload:OnixRuntime.Api.Maths.TransformationMatrix.Rotate
  href: OnixRuntime.Api.Maths.TransformationMatrix.html#OnixRuntime_Api_Maths_TransformationMatrix_Rotate_System_Single_System_Single_System_Single_System_Single_
  name: Rotate
  nameWithType: TransformationMatrix.Rotate
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Rotate
- uid: OnixRuntime.Api.Maths.TransformationMatrix.RotateX*
  commentId: Overload:OnixRuntime.Api.Maths.TransformationMatrix.RotateX
  href: OnixRuntime.Api.Maths.TransformationMatrix.html#OnixRuntime_Api_Maths_TransformationMatrix_RotateX_System_Single_
  name: RotateX
  nameWithType: TransformationMatrix.RotateX
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.RotateX
- uid: OnixRuntime.Api.Maths.TransformationMatrix.RotateY*
  commentId: Overload:OnixRuntime.Api.Maths.TransformationMatrix.RotateY
  href: OnixRuntime.Api.Maths.TransformationMatrix.html#OnixRuntime_Api_Maths_TransformationMatrix_RotateY_System_Single_
  name: RotateY
  nameWithType: TransformationMatrix.RotateY
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.RotateY
- uid: OnixRuntime.Api.Maths.TransformationMatrix.RotateZ*
  commentId: Overload:OnixRuntime.Api.Maths.TransformationMatrix.RotateZ
  href: OnixRuntime.Api.Maths.TransformationMatrix.html#OnixRuntime_Api_Maths_TransformationMatrix_RotateZ_System_Single_
  name: RotateZ
  nameWithType: TransformationMatrix.RotateZ
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.RotateZ
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Transform*
  commentId: Overload:OnixRuntime.Api.Maths.TransformationMatrix.Transform
  href: OnixRuntime.Api.Maths.TransformationMatrix.html#OnixRuntime_Api_Maths_TransformationMatrix_Transform_System_Single_System_Single_System_Single_
  name: Transform
  nameWithType: TransformationMatrix.Transform
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Transform
- uid: OnixRuntime.Api.Maths.TransformationMatrix.Multiply*
  commentId: Overload:OnixRuntime.Api.Maths.TransformationMatrix.Multiply
  href: OnixRuntime.Api.Maths.TransformationMatrix.html#OnixRuntime_Api_Maths_TransformationMatrix_Multiply_OnixRuntime_Api_Maths_TransformationMatrix_
  name: Multiply
  nameWithType: TransformationMatrix.Multiply
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.Multiply
- uid: OnixRuntime.Api.Maths.TransformationMatrix.MultiplyInplace*
  commentId: Overload:OnixRuntime.Api.Maths.TransformationMatrix.MultiplyInplace
  href: OnixRuntime.Api.Maths.TransformationMatrix.html#OnixRuntime_Api_Maths_TransformationMatrix_MultiplyInplace_OnixRuntime_Api_Maths_TransformationMatrix_
  name: MultiplyInplace
  nameWithType: TransformationMatrix.MultiplyInplace
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.MultiplyInplace
- uid: OnixRuntime.Api.Maths.TransformationMatrix.op_Multiply*
  commentId: Overload:OnixRuntime.Api.Maths.TransformationMatrix.op_Multiply
  href: OnixRuntime.Api.Maths.TransformationMatrix.html#OnixRuntime_Api_Maths_TransformationMatrix_op_Multiply_OnixRuntime_Api_Maths_TransformationMatrix_OnixRuntime_Api_Maths_TransformationMatrix_
  name: operator *
  nameWithType: TransformationMatrix.operator *
  fullName: OnixRuntime.Api.Maths.TransformationMatrix.operator *
  nameWithType.vb: TransformationMatrix.*
  fullName.vb: OnixRuntime.Api.Maths.TransformationMatrix.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Api.Maths.TransformationMatrix.op_Multiply*
    name: '*'
    href: OnixRuntime.Api.Maths.TransformationMatrix.html#OnixRuntime_Api_Maths_TransformationMatrix_op_Multiply_OnixRuntime_Api_Maths_TransformationMatrix_OnixRuntime_Api_Maths_TransformationMatrix_
- uid: OnixRuntime.Api.Maths.Quaternion
  commentId: T:OnixRuntime.Api.Maths.Quaternion
  parent: OnixRuntime.Api.Maths
  href: OnixRuntime.Api.Maths.Quaternion.html
  name: Quaternion
  nameWithType: Quaternion
  fullName: OnixRuntime.Api.Maths.Quaternion
