### YamlMime:ManagedReference
items:
- uid: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions
  commentId: T:OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions
  id: OnixModuleTypeExtensions
  parent: OnixRuntime.Api.OnixClient
  children:
  - OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsCSharp(OnixRuntime.Api.OnixClient.OnixModuleType)
  - OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsLegacyScript(OnixRuntime.Api.OnixClient.OnixModuleType)
  - OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNative(OnixRuntime.Api.OnixClient.OnixModuleType)
  - OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNormal(OnixRuntime.Api.OnixClient.OnixModuleType)
  - OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsTextual(OnixRuntime.Api.OnixClient.OnixModuleType)
  - OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsVisual(OnixRuntime.Api.OnixClient.OnixModuleType)
  langs:
  - csharp
  - vb
  name: OnixModuleTypeExtensions
  nameWithType: OnixModuleTypeExtensions
  fullName: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions
  type: Class
  source:
    remote:
      path: OnixRuntime/Api/OnixClient/OnixModule.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: OnixModuleTypeExtensions
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/OnixClient/OnixModule.cs
    startLine: 53
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.OnixClient
  summary: Extension methods for the OnixModuleType enum providing helper methods to check module type characteristics.
  example: []
  syntax:
    content: public static class OnixModuleTypeExtensions
    content.vb: Public Module OnixModuleTypeExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsVisual(OnixRuntime.Api.OnixClient.OnixModuleType)
  commentId: M:OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsVisual(OnixRuntime.Api.OnixClient.OnixModuleType)
  id: IsVisual(OnixRuntime.Api.OnixClient.OnixModuleType)
  isExtensionMethod: true
  parent: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions
  langs:
  - csharp
  - vb
  name: IsVisual(OnixModuleType)
  nameWithType: OnixModuleTypeExtensions.IsVisual(OnixModuleType)
  fullName: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsVisual(OnixRuntime.Api.OnixClient.OnixModuleType)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/OnixClient/OnixModule.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: IsVisual
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/OnixClient/OnixModule.cs
    startLine: 59
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.OnixClient
  summary: Determines if the module type is visual in some way (that makes it have a position, size, anchor etc.).
  example: []
  syntax:
    content: public static bool IsVisual(this OnixModuleType type)
    parameters:
    - id: type
      type: OnixRuntime.Api.OnixClient.OnixModuleType
      description: The OnixModuleType to check.
    return:
      type: System.Boolean
      description: True if the module type is considered visual; otherwise, false.
    content.vb: Public Shared Function IsVisual(type As OnixModuleType) As Boolean
  overload: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsVisual*
- uid: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsTextual(OnixRuntime.Api.OnixClient.OnixModuleType)
  commentId: M:OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsTextual(OnixRuntime.Api.OnixClient.OnixModuleType)
  id: IsTextual(OnixRuntime.Api.OnixClient.OnixModuleType)
  isExtensionMethod: true
  parent: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions
  langs:
  - csharp
  - vb
  name: IsTextual(OnixModuleType)
  nameWithType: OnixModuleTypeExtensions.IsTextual(OnixModuleType)
  fullName: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsTextual(OnixRuntime.Api.OnixClient.OnixModuleType)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/OnixClient/OnixModule.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: IsTextual
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/OnixClient/OnixModule.cs
    startLine: 67
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.OnixClient
  summary: Determines if the module type is textual in some way (that makes it have a Text property).
  example: []
  syntax:
    content: public static bool IsTextual(this OnixModuleType type)
    parameters:
    - id: type
      type: OnixRuntime.Api.OnixClient.OnixModuleType
      description: The OnixModuleType to check.
    return:
      type: System.Boolean
      description: True if the module type is considered textual; otherwise, false.
    content.vb: Public Shared Function IsTextual(type As OnixModuleType) As Boolean
  overload: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsTextual*
- uid: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsCSharp(OnixRuntime.Api.OnixClient.OnixModuleType)
  commentId: M:OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsCSharp(OnixRuntime.Api.OnixClient.OnixModuleType)
  id: IsCSharp(OnixRuntime.Api.OnixClient.OnixModuleType)
  isExtensionMethod: true
  parent: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions
  langs:
  - csharp
  - vb
  name: IsCSharp(OnixModuleType)
  nameWithType: OnixModuleTypeExtensions.IsCSharp(OnixModuleType)
  fullName: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsCSharp(OnixRuntime.Api.OnixClient.OnixModuleType)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/OnixClient/OnixModule.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: IsCSharp
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/OnixClient/OnixModule.cs
    startLine: 77
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.OnixClient
  summary: Determines if the module type is CSharp in some way.
  example: []
  syntax:
    content: public static bool IsCSharp(this OnixModuleType type)
    parameters:
    - id: type
      type: OnixRuntime.Api.OnixClient.OnixModuleType
      description: The OnixModuleType to check.
    return:
      type: System.Boolean
      description: True if the module type is CSharp-based; otherwise, false.
    content.vb: Public Shared Function IsCSharp(type As OnixModuleType) As Boolean
  overload: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsCSharp*
- uid: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsLegacyScript(OnixRuntime.Api.OnixClient.OnixModuleType)
  commentId: M:OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsLegacyScript(OnixRuntime.Api.OnixClient.OnixModuleType)
  id: IsLegacyScript(OnixRuntime.Api.OnixClient.OnixModuleType)
  isExtensionMethod: true
  parent: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions
  langs:
  - csharp
  - vb
  name: IsLegacyScript(OnixModuleType)
  nameWithType: OnixModuleTypeExtensions.IsLegacyScript(OnixModuleType)
  fullName: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsLegacyScript(OnixRuntime.Api.OnixClient.OnixModuleType)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/OnixClient/OnixModule.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: IsLegacyScript
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/OnixClient/OnixModule.cs
    startLine: 86
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.OnixClient
  summary: Determines if the module type is legacy scripting in some way.
  example: []
  syntax:
    content: public static bool IsLegacyScript(this OnixModuleType type)
    parameters:
    - id: type
      type: OnixRuntime.Api.OnixClient.OnixModuleType
      description: The OnixModuleType to check.
    return:
      type: System.Boolean
      description: True if the module type is based on legacy scripting; otherwise, false.
    content.vb: Public Shared Function IsLegacyScript(type As OnixModuleType) As Boolean
  overload: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsLegacyScript*
- uid: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNormal(OnixRuntime.Api.OnixClient.OnixModuleType)
  commentId: M:OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNormal(OnixRuntime.Api.OnixClient.OnixModuleType)
  id: IsNormal(OnixRuntime.Api.OnixClient.OnixModuleType)
  isExtensionMethod: true
  parent: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions
  langs:
  - csharp
  - vb
  name: IsNormal(OnixModuleType)
  nameWithType: OnixModuleTypeExtensions.IsNormal(OnixModuleType)
  fullName: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNormal(OnixRuntime.Api.OnixClient.OnixModuleType)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/OnixClient/OnixModule.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: IsNormal
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/OnixClient/OnixModule.cs
    startLine: 94
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.OnixClient
  summary: Determines if the module type is not visual or textual.
  example: []
  syntax:
    content: public static bool IsNormal(this OnixModuleType type)
    parameters:
    - id: type
      type: OnixRuntime.Api.OnixClient.OnixModuleType
      description: The OnixModuleType to check.
    return:
      type: System.Boolean
      description: True if the module type is considered normal (not specialized); otherwise, false.
    content.vb: Public Shared Function IsNormal(type As OnixModuleType) As Boolean
  overload: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNormal*
- uid: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNative(OnixRuntime.Api.OnixClient.OnixModuleType)
  commentId: M:OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNative(OnixRuntime.Api.OnixClient.OnixModuleType)
  id: IsNative(OnixRuntime.Api.OnixClient.OnixModuleType)
  isExtensionMethod: true
  parent: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions
  langs:
  - csharp
  - vb
  name: IsNative(OnixModuleType)
  nameWithType: OnixModuleTypeExtensions.IsNative(OnixModuleType)
  fullName: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNative(OnixRuntime.Api.OnixClient.OnixModuleType)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/OnixClient/OnixModule.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: IsNative
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/OnixClient/OnixModule.cs
    startLine: 102
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.OnixClient
  summary: Determines if the module type is native to the client and not an extension.
  example: []
  syntax:
    content: public static bool IsNative(this OnixModuleType type)
    parameters:
    - id: type
      type: OnixRuntime.Api.OnixClient.OnixModuleType
      description: The OnixModuleType to check.
    return:
      type: System.Boolean
      description: True if the module type is native to the client; otherwise, false.
    content.vb: Public Shared Function IsNative(type As OnixModuleType) As Boolean
  overload: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNative*
references:
- uid: OnixRuntime.Api.OnixClient
  commentId: N:OnixRuntime.Api.OnixClient
  href: OnixRuntime.html
  name: OnixRuntime.Api.OnixClient
  nameWithType: OnixRuntime.Api.OnixClient
  fullName: OnixRuntime.Api.OnixClient
  spec.csharp:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Api
    name: Api
    href: OnixRuntime.Api.html
  - name: .
  - uid: OnixRuntime.Api.OnixClient
    name: OnixClient
    href: OnixRuntime.Api.OnixClient.html
  spec.vb:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Api
    name: Api
    href: OnixRuntime.Api.html
  - name: .
  - uid: OnixRuntime.Api.OnixClient
    name: OnixClient
    href: OnixRuntime.Api.OnixClient.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsVisual*
  commentId: Overload:OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsVisual
  href: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.html#OnixRuntime_Api_OnixClient_OnixModuleTypeExtensions_IsVisual_OnixRuntime_Api_OnixClient_OnixModuleType_
  name: IsVisual
  nameWithType: OnixModuleTypeExtensions.IsVisual
  fullName: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsVisual
- uid: OnixRuntime.Api.OnixClient.OnixModuleType
  commentId: T:OnixRuntime.Api.OnixClient.OnixModuleType
  parent: OnixRuntime.Api.OnixClient
  href: OnixRuntime.Api.OnixClient.OnixModuleType.html
  name: OnixModuleType
  nameWithType: OnixModuleType
  fullName: OnixRuntime.Api.OnixClient.OnixModuleType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsTextual*
  commentId: Overload:OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsTextual
  href: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.html#OnixRuntime_Api_OnixClient_OnixModuleTypeExtensions_IsTextual_OnixRuntime_Api_OnixClient_OnixModuleType_
  name: IsTextual
  nameWithType: OnixModuleTypeExtensions.IsTextual
  fullName: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsTextual
- uid: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsCSharp*
  commentId: Overload:OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsCSharp
  href: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.html#OnixRuntime_Api_OnixClient_OnixModuleTypeExtensions_IsCSharp_OnixRuntime_Api_OnixClient_OnixModuleType_
  name: IsCSharp
  nameWithType: OnixModuleTypeExtensions.IsCSharp
  fullName: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsCSharp
- uid: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsLegacyScript*
  commentId: Overload:OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsLegacyScript
  href: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.html#OnixRuntime_Api_OnixClient_OnixModuleTypeExtensions_IsLegacyScript_OnixRuntime_Api_OnixClient_OnixModuleType_
  name: IsLegacyScript
  nameWithType: OnixModuleTypeExtensions.IsLegacyScript
  fullName: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsLegacyScript
- uid: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNormal*
  commentId: Overload:OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNormal
  href: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.html#OnixRuntime_Api_OnixClient_OnixModuleTypeExtensions_IsNormal_OnixRuntime_Api_OnixClient_OnixModuleType_
  name: IsNormal
  nameWithType: OnixModuleTypeExtensions.IsNormal
  fullName: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNormal
- uid: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNative*
  commentId: Overload:OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNative
  href: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.html#OnixRuntime_Api_OnixClient_OnixModuleTypeExtensions_IsNative_OnixRuntime_Api_OnixClient_OnixModuleType_
  name: IsNative
  nameWithType: OnixModuleTypeExtensions.IsNative
  fullName: OnixRuntime.Api.OnixClient.OnixModuleTypeExtensions.IsNative
