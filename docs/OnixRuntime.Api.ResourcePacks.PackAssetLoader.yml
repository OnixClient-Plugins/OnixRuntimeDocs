### YamlMime:ManagedReference
items:
- uid: OnixRuntime.Api.ResourcePacks.PackAssetLoader
  commentId: T:OnixRuntime.Api.ResourcePacks.PackAssetLoader
  id: PackAssetLoader
  parent: OnixRuntime.Api.ResourcePacks
  children:
  - OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContent(System.String,System.Boolean)
  - OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContentOrNull(System.String,System.Boolean)
  - OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetPathList(System.String,System.Boolean)
  - OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasDirectory(System.String)
  - OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasFile(System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: PackAssetLoader
  nameWithType: PackAssetLoader
  fullName: OnixRuntime.Api.ResourcePacks.PackAssetLoader
  type: Class
  source:
    remote:
      path: OnixRuntime/Api/ResourcePacks/PackAssetLoader.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: PackAssetLoader
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/ResourcePacks/PackAssetLoader.cs
    startLine: 7
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.ResourcePacks
  summary: A class used to load files from packs.
  example: []
  syntax:
    content: 'public class PackAssetLoader : MemoryAddressContainer'
    content.vb: Public Class PackAssetLoader Inherits MemoryAddressContainer
  inheritance:
  - System.Object
  - OnixRuntime.Api.Internal.MemoryAddressContainer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasDirectory(System.String)
  commentId: M:OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasDirectory(System.String)
  id: HasDirectory(System.String)
  parent: OnixRuntime.Api.ResourcePacks.PackAssetLoader
  langs:
  - csharp
  - vb
  name: HasDirectory(string)
  nameWithType: PackAssetLoader.HasDirectory(string)
  fullName: OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasDirectory(string)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/ResourcePacks/PackAssetLoader.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: HasDirectory
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/ResourcePacks/PackAssetLoader.cs
    startLine: 15
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.ResourcePacks
  summary: Checks if there is a directory at this path.
  example: []
  syntax:
    content: public bool HasDirectory(string directoryPath)
    parameters:
    - id: directoryPath
      type: System.String
      description: The path to check for a directory.
    return:
      type: System.Boolean
      description: Returns true if the path is a valid directory.
    content.vb: Public Function HasDirectory(directoryPath As String) As Boolean
  overload: OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasDirectory*
  nameWithType.vb: PackAssetLoader.HasDirectory(String)
  fullName.vb: OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasDirectory(String)
  name.vb: HasDirectory(String)
- uid: OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasFile(System.String,System.Boolean)
  commentId: M:OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasFile(System.String,System.Boolean)
  id: HasFile(System.String,System.Boolean)
  parent: OnixRuntime.Api.ResourcePacks.PackAssetLoader
  langs:
  - csharp
  - vb
  name: HasFile(string, bool)
  nameWithType: PackAssetLoader.HasFile(string, bool)
  fullName: OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasFile(string, bool)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/ResourcePacks/PackAssetLoader.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: HasFile
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/ResourcePacks/PackAssetLoader.cs
    startLine: 22
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.ResourcePacks
  summary: Checks if there is a file at this path.
  example: []
  syntax:
    content: public bool HasFile(string filePath, bool trustedContentOnly = false)
    parameters:
    - id: filePath
      type: System.String
      description: The path of the file to check.
    - id: trustedContentOnly
      type: System.Boolean
      description: If only trusted content should be read.
    return:
      type: System.Boolean
      description: Returns true if there is a file at this path, could return false if the content is not trusted and trustedContentOnly is true.
    content.vb: Public Function HasFile(filePath As String, trustedContentOnly As Boolean = False) As Boolean
  overload: OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasFile*
  nameWithType.vb: PackAssetLoader.HasFile(String, Boolean)
  fullName.vb: OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasFile(String, Boolean)
  name.vb: HasFile(String, Boolean)
- uid: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContentOrNull(System.String,System.Boolean)
  commentId: M:OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContentOrNull(System.String,System.Boolean)
  id: GetContentOrNull(System.String,System.Boolean)
  parent: OnixRuntime.Api.ResourcePacks.PackAssetLoader
  langs:
  - csharp
  - vb
  name: GetContentOrNull(string, bool)
  nameWithType: PackAssetLoader.GetContentOrNull(string, bool)
  fullName: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContentOrNull(string, bool)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/ResourcePacks/PackAssetLoader.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: GetContentOrNull
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/ResourcePacks/PackAssetLoader.cs
    startLine: 30
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.ResourcePacks
  summary: >-
    Gets the content of the file at that path. This will return null if the file does not exist or was not trusted.

    This variant returns null when it cannot load the file that way you can check if the file was read but empty or just not found.
  example: []
  syntax:
    content: public byte[]? GetContentOrNull(string filePath, bool trustedContentOnly = false)
    parameters:
    - id: filePath
      type: System.String
      description: The file path of the file to get.
    - id: trustedContentOnly
      type: System.Boolean
      description: If only trusted content should be read.
    return:
      type: System.Byte[]
      description: Returns the content or null if it could not be read from.
    content.vb: Public Function GetContentOrNull(filePath As String, trustedContentOnly As Boolean = False) As Byte()
  overload: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContentOrNull*
  nameWithType.vb: PackAssetLoader.GetContentOrNull(String, Boolean)
  fullName.vb: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContentOrNull(String, Boolean)
  name.vb: GetContentOrNull(String, Boolean)
- uid: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContent(System.String,System.Boolean)
  commentId: M:OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContent(System.String,System.Boolean)
  id: GetContent(System.String,System.Boolean)
  parent: OnixRuntime.Api.ResourcePacks.PackAssetLoader
  langs:
  - csharp
  - vb
  name: GetContent(string, bool)
  nameWithType: PackAssetLoader.GetContent(string, bool)
  fullName: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContent(string, bool)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/ResourcePacks/PackAssetLoader.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: GetContent
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/ResourcePacks/PackAssetLoader.cs
    startLine: 38
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.ResourcePacks
  summary: >-
    Gets the content of the file at that path. This will return null if the file does not exist or was not trusted.

    This variant returns an empty byte array when the file does not exist.
  example: []
  syntax:
    content: public byte[] GetContent(string filePath, bool trustedContentOnly = false)
    parameters:
    - id: filePath
      type: System.String
      description: The file path of the file to get.
    - id: trustedContentOnly
      type: System.Boolean
      description: If only trusted content should be read.
    return:
      type: System.Byte[]
      description: Returns the content or null if it could not be read from.
    content.vb: Public Function GetContent(filePath As String, trustedContentOnly As Boolean = False) As Byte()
  overload: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContent*
  nameWithType.vb: PackAssetLoader.GetContent(String, Boolean)
  fullName.vb: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContent(String, Boolean)
  name.vb: GetContent(String, Boolean)
- uid: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetPathList(System.String,System.Boolean)
  commentId: M:OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetPathList(System.String,System.Boolean)
  id: GetPathList(System.String,System.Boolean)
  parent: OnixRuntime.Api.ResourcePacks.PackAssetLoader
  langs:
  - csharp
  - vb
  name: GetPathList(string, bool)
  nameWithType: PackAssetLoader.GetPathList(string, bool)
  fullName: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetPathList(string, bool)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/ResourcePacks/PackAssetLoader.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: GetPathList
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/ResourcePacks/PackAssetLoader.cs
    startLine: 47
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.ResourcePacks
  summary: >-
    Gets a list of paths in the pack. This will return an empty array if the path does not exist or is not a directory.

    Note that internally, this will ALWAYS recurse. The difference is that the output will be filtered.

    So if you plan on recursing, you should not go folder by folder and manually do it.
  example: []
  syntax:
    content: public string[] GetPathList(string filePath, bool recurse = false)
    parameters:
    - id: filePath
      type: System.String
      description: The folder to get the files/directories in.
    - id: recurse
      type: System.Boolean
      description: If it should recurse through all the directories.
    return:
      type: System.String[]
      description: ''
    content.vb: Public Function GetPathList(filePath As String, recurse As Boolean = False) As String()
  overload: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetPathList*
  nameWithType.vb: PackAssetLoader.GetPathList(String, Boolean)
  fullName.vb: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetPathList(String, Boolean)
  name.vb: GetPathList(String, Boolean)
references:
- uid: OnixRuntime.Api.ResourcePacks
  commentId: N:OnixRuntime.Api.ResourcePacks
  href: OnixRuntime.html
  name: OnixRuntime.Api.ResourcePacks
  nameWithType: OnixRuntime.Api.ResourcePacks
  fullName: OnixRuntime.Api.ResourcePacks
  spec.csharp:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Api
    name: Api
    href: OnixRuntime.Api.html
  - name: .
  - uid: OnixRuntime.Api.ResourcePacks
    name: ResourcePacks
    href: OnixRuntime.Api.ResourcePacks.html
  spec.vb:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Api
    name: Api
    href: OnixRuntime.Api.html
  - name: .
  - uid: OnixRuntime.Api.ResourcePacks
    name: ResourcePacks
    href: OnixRuntime.Api.ResourcePacks.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: OnixRuntime.Api.Internal.MemoryAddressContainer
  commentId: T:OnixRuntime.Api.Internal.MemoryAddressContainer
  parent: OnixRuntime.Api.Internal
  href: OnixRuntime.Api.Internal.MemoryAddressContainer.html
  name: MemoryAddressContainer
  nameWithType: MemoryAddressContainer
  fullName: OnixRuntime.Api.Internal.MemoryAddressContainer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OnixRuntime.Api.Internal
  commentId: N:OnixRuntime.Api.Internal
  href: OnixRuntime.html
  name: OnixRuntime.Api.Internal
  nameWithType: OnixRuntime.Api.Internal
  fullName: OnixRuntime.Api.Internal
  spec.csharp:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Api
    name: Api
    href: OnixRuntime.Api.html
  - name: .
  - uid: OnixRuntime.Api.Internal
    name: Internal
    href: OnixRuntime.Api.Internal.html
  spec.vb:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Api
    name: Api
    href: OnixRuntime.Api.html
  - name: .
  - uid: OnixRuntime.Api.Internal
    name: Internal
    href: OnixRuntime.Api.Internal.html
- uid: OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasDirectory*
  commentId: Overload:OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasDirectory
  href: OnixRuntime.Api.ResourcePacks.PackAssetLoader.html#OnixRuntime_Api_ResourcePacks_PackAssetLoader_HasDirectory_System_String_
  name: HasDirectory
  nameWithType: PackAssetLoader.HasDirectory
  fullName: OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasDirectory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasFile*
  commentId: Overload:OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasFile
  href: OnixRuntime.Api.ResourcePacks.PackAssetLoader.html#OnixRuntime_Api_ResourcePacks_PackAssetLoader_HasFile_System_String_System_Boolean_
  name: HasFile
  nameWithType: PackAssetLoader.HasFile
  fullName: OnixRuntime.Api.ResourcePacks.PackAssetLoader.HasFile
- uid: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContentOrNull*
  commentId: Overload:OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContentOrNull
  href: OnixRuntime.Api.ResourcePacks.PackAssetLoader.html#OnixRuntime_Api_ResourcePacks_PackAssetLoader_GetContentOrNull_System_String_System_Boolean_
  name: GetContentOrNull
  nameWithType: PackAssetLoader.GetContentOrNull
  fullName: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContentOrNull
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContent*
  commentId: Overload:OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContent
  href: OnixRuntime.Api.ResourcePacks.PackAssetLoader.html#OnixRuntime_Api_ResourcePacks_PackAssetLoader_GetContent_System_String_System_Boolean_
  name: GetContent
  nameWithType: PackAssetLoader.GetContent
  fullName: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetContent
- uid: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetPathList*
  commentId: Overload:OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetPathList
  href: OnixRuntime.Api.ResourcePacks.PackAssetLoader.html#OnixRuntime_Api_ResourcePacks_PackAssetLoader_GetPathList_System_String_System_Boolean_
  name: GetPathList
  nameWithType: PackAssetLoader.GetPathList
  fullName: OnixRuntime.Api.ResourcePacks.PackAssetLoader.GetPathList
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
