### YamlMime:ManagedReference
items:
- uid: OnixRuntime.Api.Utils.PluginSemVersion
  commentId: T:OnixRuntime.Api.Utils.PluginSemVersion
  id: PluginSemVersion
  parent: OnixRuntime.Api.Utils
  children:
  - OnixRuntime.Api.Utils.PluginSemVersion.#ctor(System.Int32,System.Int32,System.Int32)
  - OnixRuntime.Api.Utils.PluginSemVersion.#ctor(System.ReadOnlySpan{System.Char})
  - OnixRuntime.Api.Utils.PluginSemVersion.CompareTo(System.Object)
  - OnixRuntime.Api.Utils.PluginSemVersion.Equals(System.Object)
  - OnixRuntime.Api.Utils.PluginSemVersion.FromGameVersionInteger(System.Int32)
  - OnixRuntime.Api.Utils.PluginSemVersion.GameVersionInteger
  - OnixRuntime.Api.Utils.PluginSemVersion.GetHashCode
  - OnixRuntime.Api.Utils.PluginSemVersion.Major
  - OnixRuntime.Api.Utils.PluginSemVersion.Minor
  - OnixRuntime.Api.Utils.PluginSemVersion.Patch
  - OnixRuntime.Api.Utils.PluginSemVersion.ToString
  - OnixRuntime.Api.Utils.PluginSemVersion.op_Equality(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  - OnixRuntime.Api.Utils.PluginSemVersion.op_GreaterThan(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  - OnixRuntime.Api.Utils.PluginSemVersion.op_GreaterThanOrEqual(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  - OnixRuntime.Api.Utils.PluginSemVersion.op_Inequality(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  - OnixRuntime.Api.Utils.PluginSemVersion.op_LessThan(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  - OnixRuntime.Api.Utils.PluginSemVersion.op_LessThanOrEqual(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  langs:
  - csharp
  - vb
  name: PluginSemVersion
  nameWithType: PluginSemVersion
  fullName: OnixRuntime.Api.Utils.PluginSemVersion
  type: Class
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: PluginSemVersion
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 4
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Represents a semantic version for plugins, supporting comparison and parsing.
  example: []
  syntax:
    content: 'public class PluginSemVersion : IComparable'
    content.vb: Public Class PluginSemVersion Implements IComparable
  inheritance:
  - System.Object
  implements:
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: OnixRuntime.Api.Utils.PluginSemVersion.Major
  commentId: P:OnixRuntime.Api.Utils.PluginSemVersion.Major
  id: Major
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: Major
  nameWithType: PluginSemVersion.Major
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.Major
  type: Property
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Major
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 8
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Gets the major version component.
  example: []
  syntax:
    content: public int Major { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Major As Integer
  overload: OnixRuntime.Api.Utils.PluginSemVersion.Major*
- uid: OnixRuntime.Api.Utils.PluginSemVersion.Minor
  commentId: P:OnixRuntime.Api.Utils.PluginSemVersion.Minor
  id: Minor
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: Minor
  nameWithType: PluginSemVersion.Minor
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.Minor
  type: Property
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Minor
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 12
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Gets the minor version component.
  example: []
  syntax:
    content: public int Minor { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Minor As Integer
  overload: OnixRuntime.Api.Utils.PluginSemVersion.Minor*
- uid: OnixRuntime.Api.Utils.PluginSemVersion.Patch
  commentId: P:OnixRuntime.Api.Utils.PluginSemVersion.Patch
  id: Patch
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: Patch
  nameWithType: PluginSemVersion.Patch
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.Patch
  type: Property
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Patch
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 16
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Gets the patch version component.
  example: []
  syntax:
    content: public int Patch { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Patch As Integer
  overload: OnixRuntime.Api.Utils.PluginSemVersion.Patch*
- uid: OnixRuntime.Api.Utils.PluginSemVersion.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:OnixRuntime.Api.Utils.PluginSemVersion.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: PluginSemVersion(int, int, int)
  nameWithType: PluginSemVersion.PluginSemVersion(int, int, int)
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.PluginSemVersion(int, int, int)
  type: Constructor
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: .ctor
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 24
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Initializes a new instance of the <xref href="OnixRuntime.Api.Utils.PluginSemVersion" data-throw-if-not-resolved="false"></xref> class with the specified major, minor, and patch values.
  example: []
  syntax:
    content: public PluginSemVersion(int major, int minor, int patch)
    parameters:
    - id: major
      type: System.Int32
      description: The major version.
    - id: minor
      type: System.Int32
      description: The minor version.
    - id: patch
      type: System.Int32
      description: The patch version.
    content.vb: Public Sub New(major As Integer, minor As Integer, patch As Integer)
  overload: OnixRuntime.Api.Utils.PluginSemVersion.#ctor*
  nameWithType.vb: PluginSemVersion.New(Integer, Integer, Integer)
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.New(Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer)
- uid: OnixRuntime.Api.Utils.PluginSemVersion.#ctor(System.ReadOnlySpan{System.Char})
  commentId: M:OnixRuntime.Api.Utils.PluginSemVersion.#ctor(System.ReadOnlySpan{System.Char})
  id: '#ctor(System.ReadOnlySpan{System.Char})'
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: PluginSemVersion(ReadOnlySpan<char>)
  nameWithType: PluginSemVersion.PluginSemVersion(ReadOnlySpan<char>)
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.PluginSemVersion(System.ReadOnlySpan<char>)
  type: Constructor
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: .ctor
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 35
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Initializes a new instance of the <xref href="OnixRuntime.Api.Utils.PluginSemVersion" data-throw-if-not-resolved="false"></xref> class from a version string.
  example: []
  syntax:
    content: public PluginSemVersion(ReadOnlySpan<char> versionText)
    parameters:
    - id: versionText
      type: System.ReadOnlySpan{System.Char}
      description: The version string in the format 'major.minor.patch'.
    content.vb: Public Sub New(versionText As ReadOnlySpan(Of Char))
  overload: OnixRuntime.Api.Utils.PluginSemVersion.#ctor*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: Thrown when the version string is not in the correct format.
  nameWithType.vb: PluginSemVersion.New(ReadOnlySpan(Of Char))
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.New(System.ReadOnlySpan(Of Char))
  name.vb: New(ReadOnlySpan(Of Char))
- uid: OnixRuntime.Api.Utils.PluginSemVersion.FromGameVersionInteger(System.Int32)
  commentId: M:OnixRuntime.Api.Utils.PluginSemVersion.FromGameVersionInteger(System.Int32)
  id: FromGameVersionInteger(System.Int32)
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: FromGameVersionInteger(int)
  nameWithType: PluginSemVersion.FromGameVersionInteger(int)
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.FromGameVersionInteger(int)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: FromGameVersionInteger
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 55
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Creates a <xref href="OnixRuntime.Api.Utils.PluginSemVersion" data-throw-if-not-resolved="false"></xref> from a game version integer.
  example: []
  syntax:
    content: public static PluginSemVersion FromGameVersionInteger(int gameVersion)
    parameters:
    - id: gameVersion
      type: System.Int32
      description: The integer representing the game version.
    return:
      type: OnixRuntime.Api.Utils.PluginSemVersion
      description: A <xref href="OnixRuntime.Api.Utils.PluginSemVersion" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Function FromGameVersionInteger(gameVersion As Integer) As PluginSemVersion
  overload: OnixRuntime.Api.Utils.PluginSemVersion.FromGameVersionInteger*
  nameWithType.vb: PluginSemVersion.FromGameVersionInteger(Integer)
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.FromGameVersionInteger(Integer)
  name.vb: FromGameVersionInteger(Integer)
- uid: OnixRuntime.Api.Utils.PluginSemVersion.op_GreaterThan(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  commentId: M:OnixRuntime.Api.Utils.PluginSemVersion.op_GreaterThan(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  id: op_GreaterThan(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: operator >(PluginSemVersion, PluginSemVersion)
  nameWithType: PluginSemVersion.operator >(PluginSemVersion, PluginSemVersion)
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.operator >(OnixRuntime.Api.Utils.PluginSemVersion, OnixRuntime.Api.Utils.PluginSemVersion)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_GreaterThan
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 63
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Determines if one version is greater than another.
  example: []
  syntax:
    content: public static bool operator >(PluginSemVersion a, PluginSemVersion b)
    parameters:
    - id: a
      type: OnixRuntime.Api.Utils.PluginSemVersion
      description: The first version.
    - id: b
      type: OnixRuntime.Api.Utils.PluginSemVersion
      description: The second version.
    return:
      type: System.Boolean
      description: True if <code class="paramref">a</code> is greater than <code class="paramref">b</code>; otherwise, false.
    content.vb: Public Shared Operator >(a As PluginSemVersion, b As PluginSemVersion) As Boolean
  overload: OnixRuntime.Api.Utils.PluginSemVersion.op_GreaterThan*
  nameWithType.vb: PluginSemVersion.>(PluginSemVersion, PluginSemVersion)
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.>(OnixRuntime.Api.Utils.PluginSemVersion, OnixRuntime.Api.Utils.PluginSemVersion)
  name.vb: '>(PluginSemVersion, PluginSemVersion)'
- uid: OnixRuntime.Api.Utils.PluginSemVersion.GameVersionInteger
  commentId: P:OnixRuntime.Api.Utils.PluginSemVersion.GameVersionInteger
  id: GameVersionInteger
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: GameVersionInteger
  nameWithType: PluginSemVersion.GameVersionInteger
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.GameVersionInteger
  type: Property
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: GameVersionInteger
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 81
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Gets the integer representation of the version for game versioning.
  example: []
  syntax:
    content: public int GameVersionInteger { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property GameVersionInteger As Integer
  overload: OnixRuntime.Api.Utils.PluginSemVersion.GameVersionInteger*
- uid: OnixRuntime.Api.Utils.PluginSemVersion.op_LessThan(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  commentId: M:OnixRuntime.Api.Utils.PluginSemVersion.op_LessThan(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  id: op_LessThan(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: operator <(PluginSemVersion, PluginSemVersion)
  nameWithType: PluginSemVersion.operator <(PluginSemVersion, PluginSemVersion)
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.operator <(OnixRuntime.Api.Utils.PluginSemVersion, OnixRuntime.Api.Utils.PluginSemVersion)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_LessThan
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 93
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Determines if one version is less than another.
  example: []
  syntax:
    content: public static bool operator <(PluginSemVersion a, PluginSemVersion b)
    parameters:
    - id: a
      type: OnixRuntime.Api.Utils.PluginSemVersion
      description: The first version.
    - id: b
      type: OnixRuntime.Api.Utils.PluginSemVersion
      description: The second version.
    return:
      type: System.Boolean
      description: True if <code class="paramref">a</code> is less than <code class="paramref">b</code>; otherwise, false.
    content.vb: Public Shared Operator <(a As PluginSemVersion, b As PluginSemVersion) As Boolean
  overload: OnixRuntime.Api.Utils.PluginSemVersion.op_LessThan*
  nameWithType.vb: PluginSemVersion.<(PluginSemVersion, PluginSemVersion)
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.<(OnixRuntime.Api.Utils.PluginSemVersion, OnixRuntime.Api.Utils.PluginSemVersion)
  name.vb: <(PluginSemVersion, PluginSemVersion)
- uid: OnixRuntime.Api.Utils.PluginSemVersion.op_GreaterThanOrEqual(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  commentId: M:OnixRuntime.Api.Utils.PluginSemVersion.op_GreaterThanOrEqual(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  id: op_GreaterThanOrEqual(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: operator >=(PluginSemVersion, PluginSemVersion)
  nameWithType: PluginSemVersion.operator >=(PluginSemVersion, PluginSemVersion)
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.operator >=(OnixRuntime.Api.Utils.PluginSemVersion, OnixRuntime.Api.Utils.PluginSemVersion)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_GreaterThanOrEqual
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 114
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Determines if one version is greater than or equal to another.
  example: []
  syntax:
    content: public static bool operator >=(PluginSemVersion a, PluginSemVersion b)
    parameters:
    - id: a
      type: OnixRuntime.Api.Utils.PluginSemVersion
      description: The first version.
    - id: b
      type: OnixRuntime.Api.Utils.PluginSemVersion
      description: The second version.
    return:
      type: System.Boolean
      description: True if <code class="paramref">a</code> is greater than or equal to <code class="paramref">b</code>; otherwise, false.
    content.vb: Public Shared Operator >=(a As PluginSemVersion, b As PluginSemVersion) As Boolean
  overload: OnixRuntime.Api.Utils.PluginSemVersion.op_GreaterThanOrEqual*
  nameWithType.vb: PluginSemVersion.>=(PluginSemVersion, PluginSemVersion)
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.>=(OnixRuntime.Api.Utils.PluginSemVersion, OnixRuntime.Api.Utils.PluginSemVersion)
  name.vb: '>=(PluginSemVersion, PluginSemVersion)'
- uid: OnixRuntime.Api.Utils.PluginSemVersion.op_LessThanOrEqual(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  commentId: M:OnixRuntime.Api.Utils.PluginSemVersion.op_LessThanOrEqual(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  id: op_LessThanOrEqual(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: operator <=(PluginSemVersion, PluginSemVersion)
  nameWithType: PluginSemVersion.operator <=(PluginSemVersion, PluginSemVersion)
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.operator <=(OnixRuntime.Api.Utils.PluginSemVersion, OnixRuntime.Api.Utils.PluginSemVersion)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_LessThanOrEqual
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 124
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Determines if one version is less than or equal to another.
  example: []
  syntax:
    content: public static bool operator <=(PluginSemVersion a, PluginSemVersion b)
    parameters:
    - id: a
      type: OnixRuntime.Api.Utils.PluginSemVersion
      description: The first version.
    - id: b
      type: OnixRuntime.Api.Utils.PluginSemVersion
      description: The second version.
    return:
      type: System.Boolean
      description: True if <code class="paramref">a</code> is less than or equal to <code class="paramref">b</code>; otherwise, false.
    content.vb: Public Shared Operator <=(a As PluginSemVersion, b As PluginSemVersion) As Boolean
  overload: OnixRuntime.Api.Utils.PluginSemVersion.op_LessThanOrEqual*
  nameWithType.vb: PluginSemVersion.<=(PluginSemVersion, PluginSemVersion)
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.<=(OnixRuntime.Api.Utils.PluginSemVersion, OnixRuntime.Api.Utils.PluginSemVersion)
  name.vb: <=(PluginSemVersion, PluginSemVersion)
- uid: OnixRuntime.Api.Utils.PluginSemVersion.op_Equality(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  commentId: M:OnixRuntime.Api.Utils.PluginSemVersion.op_Equality(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  id: op_Equality(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: operator ==(PluginSemVersion, PluginSemVersion?)
  nameWithType: PluginSemVersion.operator ==(PluginSemVersion, PluginSemVersion?)
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.operator ==(OnixRuntime.Api.Utils.PluginSemVersion, OnixRuntime.Api.Utils.PluginSemVersion?)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Equality
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 134
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Determines if two versions are equal.
  example: []
  syntax:
    content: public static bool operator ==(PluginSemVersion a, PluginSemVersion? b)
    parameters:
    - id: a
      type: OnixRuntime.Api.Utils.PluginSemVersion
      description: The first version.
    - id: b
      type: OnixRuntime.Api.Utils.PluginSemVersion
      description: The second version.
    return:
      type: System.Boolean
      description: True if the versions are equal; otherwise, false.
    content.vb: Public Shared Operator =(a As PluginSemVersion, b As PluginSemVersion) As Boolean
  overload: OnixRuntime.Api.Utils.PluginSemVersion.op_Equality*
  nameWithType.vb: PluginSemVersion.=(PluginSemVersion, PluginSemVersion)
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.=(OnixRuntime.Api.Utils.PluginSemVersion, OnixRuntime.Api.Utils.PluginSemVersion)
  name.vb: =(PluginSemVersion, PluginSemVersion)
- uid: OnixRuntime.Api.Utils.PluginSemVersion.op_Inequality(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  commentId: M:OnixRuntime.Api.Utils.PluginSemVersion.op_Inequality(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  id: op_Inequality(OnixRuntime.Api.Utils.PluginSemVersion,OnixRuntime.Api.Utils.PluginSemVersion)
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: operator !=(PluginSemVersion, PluginSemVersion?)
  nameWithType: PluginSemVersion.operator !=(PluginSemVersion, PluginSemVersion?)
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.operator !=(OnixRuntime.Api.Utils.PluginSemVersion, OnixRuntime.Api.Utils.PluginSemVersion?)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Inequality
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 145
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Determines if two versions are not equal.
  example: []
  syntax:
    content: public static bool operator !=(PluginSemVersion a, PluginSemVersion? b)
    parameters:
    - id: a
      type: OnixRuntime.Api.Utils.PluginSemVersion
      description: The first version.
    - id: b
      type: OnixRuntime.Api.Utils.PluginSemVersion
      description: The second version.
    return:
      type: System.Boolean
      description: True if the versions are not equal; otherwise, false.
    content.vb: Public Shared Operator <>(a As PluginSemVersion, b As PluginSemVersion) As Boolean
  overload: OnixRuntime.Api.Utils.PluginSemVersion.op_Inequality*
  nameWithType.vb: PluginSemVersion.<>(PluginSemVersion, PluginSemVersion)
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.<>(OnixRuntime.Api.Utils.PluginSemVersion, OnixRuntime.Api.Utils.PluginSemVersion)
  name.vb: <>(PluginSemVersion, PluginSemVersion)
- uid: OnixRuntime.Api.Utils.PluginSemVersion.Equals(System.Object)
  commentId: M:OnixRuntime.Api.Utils.PluginSemVersion.Equals(System.Object)
  id: Equals(System.Object)
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: PluginSemVersion.Equals(object?)
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.Equals(object?)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Equals
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 150
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: OnixRuntime.Api.Utils.PluginSemVersion.Equals*
  nameWithType.vb: PluginSemVersion.Equals(Object)
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.Equals(Object)
  name.vb: Equals(Object)
- uid: OnixRuntime.Api.Utils.PluginSemVersion.GetHashCode
  commentId: M:OnixRuntime.Api.Utils.PluginSemVersion.GetHashCode
  id: GetHashCode
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PluginSemVersion.GetHashCode()
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.GetHashCode()
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: GetHashCode
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 158
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: OnixRuntime.Api.Utils.PluginSemVersion.GetHashCode*
- uid: OnixRuntime.Api.Utils.PluginSemVersion.ToString
  commentId: M:OnixRuntime.Api.Utils.PluginSemVersion.ToString
  id: ToString
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PluginSemVersion.ToString()
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.ToString()
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: ToString
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 166
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Returns the string representation of the version.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string in the format 'major.minor.patch'.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: OnixRuntime.Api.Utils.PluginSemVersion.ToString*
- uid: OnixRuntime.Api.Utils.PluginSemVersion.CompareTo(System.Object)
  commentId: M:OnixRuntime.Api.Utils.PluginSemVersion.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: OnixRuntime.Api.Utils.PluginSemVersion
  langs:
  - csharp
  - vb
  name: CompareTo(object?)
  nameWithType: PluginSemVersion.CompareTo(object?)
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.CompareTo(object?)
  type: Method
  source:
    remote:
      path: OnixRuntime/Api/Utils/PluginSemVersion.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: CompareTo
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Api/Utils/PluginSemVersion.cs
    startLine: 176
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Api.Utils
  summary: Compares the current instance to another object.
  example: []
  syntax:
    content: public int CompareTo(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare to.
    return:
      type: System.Int32
      description: An integer indicating the relative order.
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: OnixRuntime.Api.Utils.PluginSemVersion.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when the object is not a <xref href="OnixRuntime.Api.Utils.PluginSemVersion" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.IComparable.CompareTo(System.Object)
  nameWithType.vb: PluginSemVersion.CompareTo(Object)
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.CompareTo(Object)
  name.vb: CompareTo(Object)
references:
- uid: OnixRuntime.Api.Utils
  commentId: N:OnixRuntime.Api.Utils
  href: OnixRuntime.html
  name: OnixRuntime.Api.Utils
  nameWithType: OnixRuntime.Api.Utils
  fullName: OnixRuntime.Api.Utils
  spec.csharp:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Api
    name: Api
    href: OnixRuntime.Api.html
  - name: .
  - uid: OnixRuntime.Api.Utils
    name: Utils
    href: OnixRuntime.Api.Utils.html
  spec.vb:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Api
    name: Api
    href: OnixRuntime.Api.html
  - name: .
  - uid: OnixRuntime.Api.Utils
    name: Utils
    href: OnixRuntime.Api.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OnixRuntime.Api.Utils.PluginSemVersion.Major*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.Major
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_Major
  name: Major
  nameWithType: PluginSemVersion.Major
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.Major
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OnixRuntime.Api.Utils.PluginSemVersion.Minor*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.Minor
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_Minor
  name: Minor
  nameWithType: PluginSemVersion.Minor
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.Minor
- uid: OnixRuntime.Api.Utils.PluginSemVersion.Patch*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.Patch
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_Patch
  name: Patch
  nameWithType: PluginSemVersion.Patch
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.Patch
- uid: OnixRuntime.Api.Utils.PluginSemVersion
  commentId: T:OnixRuntime.Api.Utils.PluginSemVersion
  parent: OnixRuntime.Api.Utils
  href: OnixRuntime.Api.Utils.PluginSemVersion.html
  name: PluginSemVersion
  nameWithType: PluginSemVersion
  fullName: OnixRuntime.Api.Utils.PluginSemVersion
- uid: OnixRuntime.Api.Utils.PluginSemVersion.#ctor*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.#ctor
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion__ctor_System_Int32_System_Int32_System_Int32_
  name: PluginSemVersion
  nameWithType: PluginSemVersion.PluginSemVersion
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.PluginSemVersion
  nameWithType.vb: PluginSemVersion.New
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.New
  name.vb: New
- uid: System.FormatException
  commentId: T:System.FormatException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.formatexception
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
- uid: System.ReadOnlySpan{System.Char}
  commentId: T:System.ReadOnlySpan{System.Char}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<char>
  nameWithType: ReadOnlySpan<char>
  fullName: System.ReadOnlySpan<char>
  nameWithType.vb: ReadOnlySpan(Of Char)
  fullName.vb: System.ReadOnlySpan(Of Char)
  name.vb: ReadOnlySpan(Of Char)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: OnixRuntime.Api.Utils.PluginSemVersion.FromGameVersionInteger*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.FromGameVersionInteger
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_FromGameVersionInteger_System_Int32_
  name: FromGameVersionInteger
  nameWithType: PluginSemVersion.FromGameVersionInteger
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.FromGameVersionInteger
- uid: OnixRuntime.Api.Utils.PluginSemVersion.op_GreaterThan*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.op_GreaterThan
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_op_GreaterThan_OnixRuntime_Api_Utils_PluginSemVersion_OnixRuntime_Api_Utils_PluginSemVersion_
  name: operator >
  nameWithType: PluginSemVersion.operator >
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.operator >
  nameWithType.vb: PluginSemVersion.>
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.>
  name.vb: '>'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Api.Utils.PluginSemVersion.op_GreaterThan*
    name: '>'
    href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_op_GreaterThan_OnixRuntime_Api_Utils_PluginSemVersion_OnixRuntime_Api_Utils_PluginSemVersion_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OnixRuntime.Api.Utils.PluginSemVersion.GameVersionInteger*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.GameVersionInteger
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_GameVersionInteger
  name: GameVersionInteger
  nameWithType: PluginSemVersion.GameVersionInteger
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.GameVersionInteger
- uid: OnixRuntime.Api.Utils.PluginSemVersion.op_LessThan*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.op_LessThan
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_op_LessThan_OnixRuntime_Api_Utils_PluginSemVersion_OnixRuntime_Api_Utils_PluginSemVersion_
  name: operator <
  nameWithType: PluginSemVersion.operator <
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.operator <
  nameWithType.vb: PluginSemVersion.<
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.<
  name.vb: <
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Api.Utils.PluginSemVersion.op_LessThan*
    name: <
    href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_op_LessThan_OnixRuntime_Api_Utils_PluginSemVersion_OnixRuntime_Api_Utils_PluginSemVersion_
- uid: OnixRuntime.Api.Utils.PluginSemVersion.op_GreaterThanOrEqual*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.op_GreaterThanOrEqual
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_op_GreaterThanOrEqual_OnixRuntime_Api_Utils_PluginSemVersion_OnixRuntime_Api_Utils_PluginSemVersion_
  name: operator >=
  nameWithType: PluginSemVersion.operator >=
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.operator >=
  nameWithType.vb: PluginSemVersion.>=
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.>=
  name.vb: '>='
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Api.Utils.PluginSemVersion.op_GreaterThanOrEqual*
    name: '>='
    href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_op_GreaterThanOrEqual_OnixRuntime_Api_Utils_PluginSemVersion_OnixRuntime_Api_Utils_PluginSemVersion_
- uid: OnixRuntime.Api.Utils.PluginSemVersion.op_LessThanOrEqual*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.op_LessThanOrEqual
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_op_LessThanOrEqual_OnixRuntime_Api_Utils_PluginSemVersion_OnixRuntime_Api_Utils_PluginSemVersion_
  name: operator <=
  nameWithType: PluginSemVersion.operator <=
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.operator <=
  nameWithType.vb: PluginSemVersion.<=
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.<=
  name.vb: <=
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Api.Utils.PluginSemVersion.op_LessThanOrEqual*
    name: <=
    href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_op_LessThanOrEqual_OnixRuntime_Api_Utils_PluginSemVersion_OnixRuntime_Api_Utils_PluginSemVersion_
- uid: OnixRuntime.Api.Utils.PluginSemVersion.op_Equality*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.op_Equality
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_op_Equality_OnixRuntime_Api_Utils_PluginSemVersion_OnixRuntime_Api_Utils_PluginSemVersion_
  name: operator ==
  nameWithType: PluginSemVersion.operator ==
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.operator ==
  nameWithType.vb: PluginSemVersion.=
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Api.Utils.PluginSemVersion.op_Equality*
    name: ==
    href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_op_Equality_OnixRuntime_Api_Utils_PluginSemVersion_OnixRuntime_Api_Utils_PluginSemVersion_
- uid: OnixRuntime.Api.Utils.PluginSemVersion.op_Inequality*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.op_Inequality
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_op_Inequality_OnixRuntime_Api_Utils_PluginSemVersion_OnixRuntime_Api_Utils_PluginSemVersion_
  name: operator !=
  nameWithType: PluginSemVersion.operator !=
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.operator !=
  nameWithType.vb: PluginSemVersion.<>
  fullName.vb: OnixRuntime.Api.Utils.PluginSemVersion.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Api.Utils.PluginSemVersion.op_Inequality*
    name: '!='
    href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_op_Inequality_OnixRuntime_Api_Utils_PluginSemVersion_OnixRuntime_Api_Utils_PluginSemVersion_
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: OnixRuntime.Api.Utils.PluginSemVersion.Equals*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.Equals
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_Equals_System_Object_
  name: Equals
  nameWithType: PluginSemVersion.Equals
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: OnixRuntime.Api.Utils.PluginSemVersion.GetHashCode*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.GetHashCode
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_GetHashCode
  name: GetHashCode
  nameWithType: PluginSemVersion.GetHashCode
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: OnixRuntime.Api.Utils.PluginSemVersion.ToString*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.ToString
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_ToString
  name: ToString
  nameWithType: PluginSemVersion.ToString
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: OnixRuntime.Api.Utils.PluginSemVersion.CompareTo*
  commentId: Overload:OnixRuntime.Api.Utils.PluginSemVersion.CompareTo
  href: OnixRuntime.Api.Utils.PluginSemVersion.html#OnixRuntime_Api_Utils_PluginSemVersion_CompareTo_System_Object_
  name: CompareTo
  nameWithType: PluginSemVersion.CompareTo
  fullName: OnixRuntime.Api.Utils.PluginSemVersion.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  name: CompareTo(object)
  nameWithType: IComparable.CompareTo(object)
  fullName: System.IComparable.CompareTo(object)
  nameWithType.vb: IComparable.CompareTo(Object)
  fullName.vb: System.IComparable.CompareTo(Object)
  name.vb: CompareTo(Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
