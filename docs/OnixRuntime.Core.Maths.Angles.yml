### YamlMime:ManagedReference
items:
- uid: OnixRuntime.Core.Maths.Angles
  commentId: T:OnixRuntime.Core.Maths.Angles
  id: Angles
  parent: OnixRuntime.Core.Maths
  children:
  - OnixRuntime.Core.Maths.Angles.#ctor
  - OnixRuntime.Core.Maths.Angles.#ctor(System.Single,System.Single)
  - OnixRuntime.Core.Maths.Angles.Angle(OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.AnglesRandom
  - OnixRuntime.Core.Maths.Angles.Clamp(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.Clamp(System.Single,System.Single)
  - OnixRuntime.Core.Maths.Angles.Cross(OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.Distance(OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.Dot(OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.Equals(OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.Equals(System.Object)
  - OnixRuntime.Core.Maths.Angles.GetHashCode
  - OnixRuntime.Core.Maths.Angles.Length
  - OnixRuntime.Core.Maths.Angles.Lerp(OnixRuntime.Core.Maths.Angles,System.Single)
  - OnixRuntime.Core.Maths.Angles.Magnitude
  - OnixRuntime.Core.Maths.Angles.MagnitudeSqr
  - OnixRuntime.Core.Maths.Angles.Max(OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.Max(System.Single)
  - OnixRuntime.Core.Maths.Angles.Min(OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.Min(System.Single)
  - OnixRuntime.Core.Maths.Angles.Normalized
  - OnixRuntime.Core.Maths.Angles.Pitch
  - OnixRuntime.Core.Maths.Angles.SetDirection(System.Single)
  - OnixRuntime.Core.Maths.Angles.SetMagnitude(System.Single)
  - OnixRuntime.Core.Maths.Angles.ToString
  - OnixRuntime.Core.Maths.Angles.ToString(System.String,System.Globalization.CultureInfo)
  - OnixRuntime.Core.Maths.Angles.Yaw
  - OnixRuntime.Core.Maths.Angles.op_Addition(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.op_Addition(OnixRuntime.Core.Maths.Angles,System.Single)
  - OnixRuntime.Core.Maths.Angles.op_Division(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.op_Division(OnixRuntime.Core.Maths.Angles,System.Single)
  - OnixRuntime.Core.Maths.Angles.op_Division(System.Single,OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.op_Equality(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.op_Inequality(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.op_Multiply(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.op_Multiply(OnixRuntime.Core.Maths.Angles,System.Single)
  - OnixRuntime.Core.Maths.Angles.op_Multiply(System.Single,OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.op_Subtraction(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  - OnixRuntime.Core.Maths.Angles.op_Subtraction(OnixRuntime.Core.Maths.Angles,System.Single)
  - OnixRuntime.Core.Maths.Angles.op_UnaryNegation(OnixRuntime.Core.Maths.Angles)
  langs:
  - csharp
  - vb
  name: Angles
  nameWithType: Angles
  fullName: OnixRuntime.Core.Maths.Angles
  type: Struct
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Angles
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 5
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: 'public struct Angles : IEquatable<Angles>'
    content.vb: Public Structure Angles Implements IEquatable(Of Angles)
  implements:
  - System.IEquatable{OnixRuntime.Core.Maths.Angles}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: OnixRuntime.Core.Maths.Angles.Yaw
  commentId: F:OnixRuntime.Core.Maths.Angles.Yaw
  id: Yaw
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Yaw
  nameWithType: Angles.Yaw
  fullName: OnixRuntime.Core.Maths.Angles.Yaw
  type: Field
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Yaw
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 6
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public float Yaw
    return:
      type: System.Single
    content.vb: Public Yaw As Single
- uid: OnixRuntime.Core.Maths.Angles.Pitch
  commentId: F:OnixRuntime.Core.Maths.Angles.Pitch
  id: Pitch
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Pitch
  nameWithType: Angles.Pitch
  fullName: OnixRuntime.Core.Maths.Angles.Pitch
  type: Field
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Pitch
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 7
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public float Pitch
    return:
      type: System.Single
    content.vb: Public Pitch As Single
- uid: OnixRuntime.Core.Maths.Angles.Length
  commentId: P:OnixRuntime.Core.Maths.Angles.Length
  id: Length
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Angles.Length
  fullName: OnixRuntime.Core.Maths.Angles.Length
  type: Property
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Length
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 9
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public float Length { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Length As Single
  overload: OnixRuntime.Core.Maths.Angles.Length*
- uid: OnixRuntime.Core.Maths.Angles.Normalized
  commentId: P:OnixRuntime.Core.Maths.Angles.Normalized
  id: Normalized
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Normalized
  nameWithType: Angles.Normalized
  fullName: OnixRuntime.Core.Maths.Angles.Normalized
  type: Property
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Normalized
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 11
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public Angles Normalized { get; }
    parameters: []
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public ReadOnly Property Normalized As Angles
  overload: OnixRuntime.Core.Maths.Angles.Normalized*
- uid: OnixRuntime.Core.Maths.Angles.Magnitude
  commentId: P:OnixRuntime.Core.Maths.Angles.Magnitude
  id: Magnitude
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Magnitude
  nameWithType: Angles.Magnitude
  fullName: OnixRuntime.Core.Maths.Angles.Magnitude
  type: Property
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Magnitude
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 18
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public float Magnitude { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Magnitude As Single
  overload: OnixRuntime.Core.Maths.Angles.Magnitude*
- uid: OnixRuntime.Core.Maths.Angles.MagnitudeSqr
  commentId: P:OnixRuntime.Core.Maths.Angles.MagnitudeSqr
  id: MagnitudeSqr
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: MagnitudeSqr
  nameWithType: Angles.MagnitudeSqr
  fullName: OnixRuntime.Core.Maths.Angles.MagnitudeSqr
  type: Property
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: MagnitudeSqr
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 19
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public float MagnitudeSqr { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property MagnitudeSqr As Single
  overload: OnixRuntime.Core.Maths.Angles.MagnitudeSqr*
- uid: OnixRuntime.Core.Maths.Angles.#ctor
  commentId: M:OnixRuntime.Core.Maths.Angles.#ctor
  id: '#ctor'
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Angles()
  nameWithType: Angles.Angles()
  fullName: OnixRuntime.Core.Maths.Angles.Angles()
  type: Constructor
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: .ctor
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 21
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public Angles()
    content.vb: Public Sub New()
  overload: OnixRuntime.Core.Maths.Angles.#ctor*
  nameWithType.vb: Angles.New()
  fullName.vb: OnixRuntime.Core.Maths.Angles.New()
  name.vb: New()
- uid: OnixRuntime.Core.Maths.Angles.#ctor(System.Single,System.Single)
  commentId: M:OnixRuntime.Core.Maths.Angles.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Angles(float, float)
  nameWithType: Angles.Angles(float, float)
  fullName: OnixRuntime.Core.Maths.Angles.Angles(float, float)
  type: Constructor
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: .ctor
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 23
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public Angles(float yaw, float pitch)
    parameters:
    - id: yaw
      type: System.Single
    - id: pitch
      type: System.Single
    content.vb: Public Sub New(yaw As Single, pitch As Single)
  overload: OnixRuntime.Core.Maths.Angles.#ctor*
  nameWithType.vb: Angles.New(Single, Single)
  fullName.vb: OnixRuntime.Core.Maths.Angles.New(Single, Single)
  name.vb: New(Single, Single)
- uid: OnixRuntime.Core.Maths.Angles.AnglesRandom
  commentId: M:OnixRuntime.Core.Maths.Angles.AnglesRandom
  id: AnglesRandom
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: AnglesRandom()
  nameWithType: Angles.AnglesRandom()
  fullName: OnixRuntime.Core.Maths.Angles.AnglesRandom()
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: AnglesRandom
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 28
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static Angles AnglesRandom()
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Shared Function AnglesRandom() As Angles
  overload: OnixRuntime.Core.Maths.Angles.AnglesRandom*
- uid: OnixRuntime.Core.Maths.Angles.SetMagnitude(System.Single)
  commentId: M:OnixRuntime.Core.Maths.Angles.SetMagnitude(System.Single)
  id: SetMagnitude(System.Single)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: SetMagnitude(float)
  nameWithType: Angles.SetMagnitude(float)
  fullName: OnixRuntime.Core.Maths.Angles.SetMagnitude(float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: SetMagnitude
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 33
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public void SetMagnitude(float magnitude)
    parameters:
    - id: magnitude
      type: System.Single
    content.vb: Public Sub SetMagnitude(magnitude As Single)
  overload: OnixRuntime.Core.Maths.Angles.SetMagnitude*
  nameWithType.vb: Angles.SetMagnitude(Single)
  fullName.vb: OnixRuntime.Core.Maths.Angles.SetMagnitude(Single)
  name.vb: SetMagnitude(Single)
- uid: OnixRuntime.Core.Maths.Angles.SetDirection(System.Single)
  commentId: M:OnixRuntime.Core.Maths.Angles.SetDirection(System.Single)
  id: SetDirection(System.Single)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: SetDirection(float)
  nameWithType: Angles.SetDirection(float)
  fullName: OnixRuntime.Core.Maths.Angles.SetDirection(float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: SetDirection
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 41
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public void SetDirection(float angle)
    parameters:
    - id: angle
      type: System.Single
    content.vb: Public Sub SetDirection(angle As Single)
  overload: OnixRuntime.Core.Maths.Angles.SetDirection*
  nameWithType.vb: Angles.SetDirection(Single)
  fullName.vb: OnixRuntime.Core.Maths.Angles.SetDirection(Single)
  name.vb: SetDirection(Single)
- uid: OnixRuntime.Core.Maths.Angles.Distance(OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.Distance(OnixRuntime.Core.Maths.Angles)
  id: Distance(OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Distance(Angles)
  nameWithType: Angles.Distance(Angles)
  fullName: OnixRuntime.Core.Maths.Angles.Distance(OnixRuntime.Core.Maths.Angles)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Distance
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 47
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public float Distance(Angles vec)
    parameters:
    - id: vec
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: System.Single
    content.vb: Public Function Distance(vec As Angles) As Single
  overload: OnixRuntime.Core.Maths.Angles.Distance*
- uid: OnixRuntime.Core.Maths.Angles.Angle(OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.Angle(OnixRuntime.Core.Maths.Angles)
  id: Angle(OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Angle(Angles)
  nameWithType: Angles.Angle(Angles)
  fullName: OnixRuntime.Core.Maths.Angles.Angle(OnixRuntime.Core.Maths.Angles)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Angle
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 53
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public float Angle(Angles vec)
    parameters:
    - id: vec
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: System.Single
    content.vb: Public Function Angle(vec As Angles) As Single
  overload: OnixRuntime.Core.Maths.Angles.Angle*
- uid: OnixRuntime.Core.Maths.Angles.Dot(OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.Dot(OnixRuntime.Core.Maths.Angles)
  id: Dot(OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Dot(Angles)
  nameWithType: Angles.Dot(Angles)
  fullName: OnixRuntime.Core.Maths.Angles.Dot(OnixRuntime.Core.Maths.Angles)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Dot
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 58
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public float Dot(Angles vec)
    parameters:
    - id: vec
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: System.Single
    content.vb: Public Function Dot(vec As Angles) As Single
  overload: OnixRuntime.Core.Maths.Angles.Dot*
- uid: OnixRuntime.Core.Maths.Angles.Cross(OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.Cross(OnixRuntime.Core.Maths.Angles)
  id: Cross(OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Cross(Angles)
  nameWithType: Angles.Cross(Angles)
  fullName: OnixRuntime.Core.Maths.Angles.Cross(OnixRuntime.Core.Maths.Angles)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Cross
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 62
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public float Cross(Angles vec)
    parameters:
    - id: vec
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: System.Single
    content.vb: Public Function Cross(vec As Angles) As Single
  overload: OnixRuntime.Core.Maths.Angles.Cross*
- uid: OnixRuntime.Core.Maths.Angles.Lerp(OnixRuntime.Core.Maths.Angles,System.Single)
  commentId: M:OnixRuntime.Core.Maths.Angles.Lerp(OnixRuntime.Core.Maths.Angles,System.Single)
  id: Lerp(OnixRuntime.Core.Maths.Angles,System.Single)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Lerp(Angles, float)
  nameWithType: Angles.Lerp(Angles, float)
  fullName: OnixRuntime.Core.Maths.Angles.Lerp(OnixRuntime.Core.Maths.Angles, float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Lerp
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 66
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public Angles Lerp(Angles vec, float t)
    parameters:
    - id: vec
      type: OnixRuntime.Core.Maths.Angles
    - id: t
      type: System.Single
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Function Lerp(vec As Angles, t As Single) As Angles
  overload: OnixRuntime.Core.Maths.Angles.Lerp*
  nameWithType.vb: Angles.Lerp(Angles, Single)
  fullName.vb: OnixRuntime.Core.Maths.Angles.Lerp(OnixRuntime.Core.Maths.Angles, Single)
  name.vb: Lerp(Angles, Single)
- uid: OnixRuntime.Core.Maths.Angles.Min(OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.Min(OnixRuntime.Core.Maths.Angles)
  id: Min(OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Min(Angles)
  nameWithType: Angles.Min(Angles)
  fullName: OnixRuntime.Core.Maths.Angles.Min(OnixRuntime.Core.Maths.Angles)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Min
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 71
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public Angles Min(Angles vec)
    parameters:
    - id: vec
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Function Min(vec As Angles) As Angles
  overload: OnixRuntime.Core.Maths.Angles.Min*
- uid: OnixRuntime.Core.Maths.Angles.Max(OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.Max(OnixRuntime.Core.Maths.Angles)
  id: Max(OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Max(Angles)
  nameWithType: Angles.Max(Angles)
  fullName: OnixRuntime.Core.Maths.Angles.Max(OnixRuntime.Core.Maths.Angles)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Max
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 75
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public Angles Max(Angles vec)
    parameters:
    - id: vec
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Function Max(vec As Angles) As Angles
  overload: OnixRuntime.Core.Maths.Angles.Max*
- uid: OnixRuntime.Core.Maths.Angles.Min(System.Single)
  commentId: M:OnixRuntime.Core.Maths.Angles.Min(System.Single)
  id: Min(System.Single)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Min(float)
  nameWithType: Angles.Min(float)
  fullName: OnixRuntime.Core.Maths.Angles.Min(float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Min
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 79
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public Angles Min(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Function Min(value As Single) As Angles
  overload: OnixRuntime.Core.Maths.Angles.Min*
  nameWithType.vb: Angles.Min(Single)
  fullName.vb: OnixRuntime.Core.Maths.Angles.Min(Single)
  name.vb: Min(Single)
- uid: OnixRuntime.Core.Maths.Angles.Max(System.Single)
  commentId: M:OnixRuntime.Core.Maths.Angles.Max(System.Single)
  id: Max(System.Single)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Max(float)
  nameWithType: Angles.Max(float)
  fullName: OnixRuntime.Core.Maths.Angles.Max(float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Max
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 83
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public Angles Max(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Function Max(value As Single) As Angles
  overload: OnixRuntime.Core.Maths.Angles.Max*
  nameWithType.vb: Angles.Max(Single)
  fullName.vb: OnixRuntime.Core.Maths.Angles.Max(Single)
  name.vb: Max(Single)
- uid: OnixRuntime.Core.Maths.Angles.Clamp(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.Clamp(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  id: Clamp(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Clamp(Angles, Angles)
  nameWithType: Angles.Clamp(Angles, Angles)
  fullName: OnixRuntime.Core.Maths.Angles.Clamp(OnixRuntime.Core.Maths.Angles, OnixRuntime.Core.Maths.Angles)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Clamp
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 87
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public Angles Clamp(Angles min, Angles max)
    parameters:
    - id: min
      type: OnixRuntime.Core.Maths.Angles
    - id: max
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Function Clamp(min As Angles, max As Angles) As Angles
  overload: OnixRuntime.Core.Maths.Angles.Clamp*
- uid: OnixRuntime.Core.Maths.Angles.Clamp(System.Single,System.Single)
  commentId: M:OnixRuntime.Core.Maths.Angles.Clamp(System.Single,System.Single)
  id: Clamp(System.Single,System.Single)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Clamp(float, float)
  nameWithType: Angles.Clamp(float, float)
  fullName: OnixRuntime.Core.Maths.Angles.Clamp(float, float)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Clamp
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 91
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public Angles Clamp(float min, float max)
    parameters:
    - id: min
      type: System.Single
    - id: max
      type: System.Single
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Function Clamp(min As Single, max As Single) As Angles
  overload: OnixRuntime.Core.Maths.Angles.Clamp*
  nameWithType.vb: Angles.Clamp(Single, Single)
  fullName.vb: OnixRuntime.Core.Maths.Angles.Clamp(Single, Single)
  name.vb: Clamp(Single, Single)
- uid: OnixRuntime.Core.Maths.Angles.op_Addition(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.op_Addition(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  id: op_Addition(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: operator +(Angles, Angles)
  nameWithType: Angles.operator +(Angles, Angles)
  fullName: OnixRuntime.Core.Maths.Angles.operator +(OnixRuntime.Core.Maths.Angles, OnixRuntime.Core.Maths.Angles)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Addition
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 96
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static Angles operator +(Angles a, Angles b)
    parameters:
    - id: a
      type: OnixRuntime.Core.Maths.Angles
    - id: b
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Shared Operator +(a As Angles, b As Angles) As Angles
  overload: OnixRuntime.Core.Maths.Angles.op_Addition*
  nameWithType.vb: Angles.+(Angles, Angles)
  fullName.vb: OnixRuntime.Core.Maths.Angles.+(OnixRuntime.Core.Maths.Angles, OnixRuntime.Core.Maths.Angles)
  name.vb: +(Angles, Angles)
- uid: OnixRuntime.Core.Maths.Angles.op_Addition(OnixRuntime.Core.Maths.Angles,System.Single)
  commentId: M:OnixRuntime.Core.Maths.Angles.op_Addition(OnixRuntime.Core.Maths.Angles,System.Single)
  id: op_Addition(OnixRuntime.Core.Maths.Angles,System.Single)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: operator +(Angles, float)
  nameWithType: Angles.operator +(Angles, float)
  fullName: OnixRuntime.Core.Maths.Angles.operator +(OnixRuntime.Core.Maths.Angles, float)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Addition
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 100
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static Angles operator +(Angles a, float b)
    parameters:
    - id: a
      type: OnixRuntime.Core.Maths.Angles
    - id: b
      type: System.Single
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Shared Operator +(a As Angles, b As Single) As Angles
  overload: OnixRuntime.Core.Maths.Angles.op_Addition*
  nameWithType.vb: Angles.+(Angles, Single)
  fullName.vb: OnixRuntime.Core.Maths.Angles.+(OnixRuntime.Core.Maths.Angles, Single)
  name.vb: +(Angles, Single)
- uid: OnixRuntime.Core.Maths.Angles.op_Subtraction(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.op_Subtraction(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  id: op_Subtraction(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: operator -(Angles, Angles)
  nameWithType: Angles.operator -(Angles, Angles)
  fullName: OnixRuntime.Core.Maths.Angles.operator -(OnixRuntime.Core.Maths.Angles, OnixRuntime.Core.Maths.Angles)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Subtraction
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 104
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static Angles operator -(Angles a, Angles b)
    parameters:
    - id: a
      type: OnixRuntime.Core.Maths.Angles
    - id: b
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Shared Operator -(a As Angles, b As Angles) As Angles
  overload: OnixRuntime.Core.Maths.Angles.op_Subtraction*
  nameWithType.vb: Angles.-(Angles, Angles)
  fullName.vb: OnixRuntime.Core.Maths.Angles.-(OnixRuntime.Core.Maths.Angles, OnixRuntime.Core.Maths.Angles)
  name.vb: -(Angles, Angles)
- uid: OnixRuntime.Core.Maths.Angles.op_Subtraction(OnixRuntime.Core.Maths.Angles,System.Single)
  commentId: M:OnixRuntime.Core.Maths.Angles.op_Subtraction(OnixRuntime.Core.Maths.Angles,System.Single)
  id: op_Subtraction(OnixRuntime.Core.Maths.Angles,System.Single)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: operator -(Angles, float)
  nameWithType: Angles.operator -(Angles, float)
  fullName: OnixRuntime.Core.Maths.Angles.operator -(OnixRuntime.Core.Maths.Angles, float)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Subtraction
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 108
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static Angles operator -(Angles a, float b)
    parameters:
    - id: a
      type: OnixRuntime.Core.Maths.Angles
    - id: b
      type: System.Single
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Shared Operator -(a As Angles, b As Single) As Angles
  overload: OnixRuntime.Core.Maths.Angles.op_Subtraction*
  nameWithType.vb: Angles.-(Angles, Single)
  fullName.vb: OnixRuntime.Core.Maths.Angles.-(OnixRuntime.Core.Maths.Angles, Single)
  name.vb: -(Angles, Single)
- uid: OnixRuntime.Core.Maths.Angles.op_UnaryNegation(OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.op_UnaryNegation(OnixRuntime.Core.Maths.Angles)
  id: op_UnaryNegation(OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: operator -(Angles)
  nameWithType: Angles.operator -(Angles)
  fullName: OnixRuntime.Core.Maths.Angles.operator -(OnixRuntime.Core.Maths.Angles)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_UnaryNegation
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 111
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static Angles operator -(Angles a)
    parameters:
    - id: a
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Shared Operator -(a As Angles) As Angles
  overload: OnixRuntime.Core.Maths.Angles.op_UnaryNegation*
  nameWithType.vb: Angles.-(Angles)
  fullName.vb: OnixRuntime.Core.Maths.Angles.-(OnixRuntime.Core.Maths.Angles)
  name.vb: -(Angles)
- uid: OnixRuntime.Core.Maths.Angles.op_Multiply(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.op_Multiply(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  id: op_Multiply(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: operator *(Angles, Angles)
  nameWithType: Angles.operator *(Angles, Angles)
  fullName: OnixRuntime.Core.Maths.Angles.operator *(OnixRuntime.Core.Maths.Angles, OnixRuntime.Core.Maths.Angles)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Multiply
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 115
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static Angles operator *(Angles a, Angles b)
    parameters:
    - id: a
      type: OnixRuntime.Core.Maths.Angles
    - id: b
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Shared Operator *(a As Angles, b As Angles) As Angles
  overload: OnixRuntime.Core.Maths.Angles.op_Multiply*
  nameWithType.vb: Angles.*(Angles, Angles)
  fullName.vb: OnixRuntime.Core.Maths.Angles.*(OnixRuntime.Core.Maths.Angles, OnixRuntime.Core.Maths.Angles)
  name.vb: '*(Angles, Angles)'
- uid: OnixRuntime.Core.Maths.Angles.op_Multiply(OnixRuntime.Core.Maths.Angles,System.Single)
  commentId: M:OnixRuntime.Core.Maths.Angles.op_Multiply(OnixRuntime.Core.Maths.Angles,System.Single)
  id: op_Multiply(OnixRuntime.Core.Maths.Angles,System.Single)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: operator *(Angles, float)
  nameWithType: Angles.operator *(Angles, float)
  fullName: OnixRuntime.Core.Maths.Angles.operator *(OnixRuntime.Core.Maths.Angles, float)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Multiply
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 119
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static Angles operator *(Angles a, float b)
    parameters:
    - id: a
      type: OnixRuntime.Core.Maths.Angles
    - id: b
      type: System.Single
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Shared Operator *(a As Angles, b As Single) As Angles
  overload: OnixRuntime.Core.Maths.Angles.op_Multiply*
  nameWithType.vb: Angles.*(Angles, Single)
  fullName.vb: OnixRuntime.Core.Maths.Angles.*(OnixRuntime.Core.Maths.Angles, Single)
  name.vb: '*(Angles, Single)'
- uid: OnixRuntime.Core.Maths.Angles.op_Multiply(System.Single,OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.op_Multiply(System.Single,OnixRuntime.Core.Maths.Angles)
  id: op_Multiply(System.Single,OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: operator *(float, Angles)
  nameWithType: Angles.operator *(float, Angles)
  fullName: OnixRuntime.Core.Maths.Angles.operator *(float, OnixRuntime.Core.Maths.Angles)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Multiply
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 123
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static Angles operator *(float a, Angles b)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Shared Operator *(a As Single, b As Angles) As Angles
  overload: OnixRuntime.Core.Maths.Angles.op_Multiply*
  nameWithType.vb: Angles.*(Single, Angles)
  fullName.vb: OnixRuntime.Core.Maths.Angles.*(Single, OnixRuntime.Core.Maths.Angles)
  name.vb: '*(Single, Angles)'
- uid: OnixRuntime.Core.Maths.Angles.op_Division(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.op_Division(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  id: op_Division(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: operator /(Angles, Angles)
  nameWithType: Angles.operator /(Angles, Angles)
  fullName: OnixRuntime.Core.Maths.Angles.operator /(OnixRuntime.Core.Maths.Angles, OnixRuntime.Core.Maths.Angles)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Division
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 127
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static Angles operator /(Angles a, Angles b)
    parameters:
    - id: a
      type: OnixRuntime.Core.Maths.Angles
    - id: b
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Shared Operator /(a As Angles, b As Angles) As Angles
  overload: OnixRuntime.Core.Maths.Angles.op_Division*
  nameWithType.vb: Angles./(Angles, Angles)
  fullName.vb: OnixRuntime.Core.Maths.Angles./(OnixRuntime.Core.Maths.Angles, OnixRuntime.Core.Maths.Angles)
  name.vb: /(Angles, Angles)
- uid: OnixRuntime.Core.Maths.Angles.op_Division(OnixRuntime.Core.Maths.Angles,System.Single)
  commentId: M:OnixRuntime.Core.Maths.Angles.op_Division(OnixRuntime.Core.Maths.Angles,System.Single)
  id: op_Division(OnixRuntime.Core.Maths.Angles,System.Single)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: operator /(Angles, float)
  nameWithType: Angles.operator /(Angles, float)
  fullName: OnixRuntime.Core.Maths.Angles.operator /(OnixRuntime.Core.Maths.Angles, float)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Division
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 135
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static Angles operator /(Angles a, float b)
    parameters:
    - id: a
      type: OnixRuntime.Core.Maths.Angles
    - id: b
      type: System.Single
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Shared Operator /(a As Angles, b As Single) As Angles
  overload: OnixRuntime.Core.Maths.Angles.op_Division*
  nameWithType.vb: Angles./(Angles, Single)
  fullName.vb: OnixRuntime.Core.Maths.Angles./(OnixRuntime.Core.Maths.Angles, Single)
  name.vb: /(Angles, Single)
- uid: OnixRuntime.Core.Maths.Angles.op_Division(System.Single,OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.op_Division(System.Single,OnixRuntime.Core.Maths.Angles)
  id: op_Division(System.Single,OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: operator /(float, Angles)
  nameWithType: Angles.operator /(float, Angles)
  fullName: OnixRuntime.Core.Maths.Angles.operator /(float, OnixRuntime.Core.Maths.Angles)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Division
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 143
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static Angles operator /(float a, Angles b)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: OnixRuntime.Core.Maths.Angles
    content.vb: Public Shared Operator /(a As Single, b As Angles) As Angles
  overload: OnixRuntime.Core.Maths.Angles.op_Division*
  nameWithType.vb: Angles./(Single, Angles)
  fullName.vb: OnixRuntime.Core.Maths.Angles./(Single, OnixRuntime.Core.Maths.Angles)
  name.vb: /(Single, Angles)
- uid: OnixRuntime.Core.Maths.Angles.op_Equality(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.op_Equality(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  id: op_Equality(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: operator ==(Angles, Angles)
  nameWithType: Angles.operator ==(Angles, Angles)
  fullName: OnixRuntime.Core.Maths.Angles.operator ==(OnixRuntime.Core.Maths.Angles, OnixRuntime.Core.Maths.Angles)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Equality
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 147
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static bool operator ==(Angles a, Angles b)
    parameters:
    - id: a
      type: OnixRuntime.Core.Maths.Angles
    - id: b
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As Angles, b As Angles) As Boolean
  overload: OnixRuntime.Core.Maths.Angles.op_Equality*
  nameWithType.vb: Angles.=(Angles, Angles)
  fullName.vb: OnixRuntime.Core.Maths.Angles.=(OnixRuntime.Core.Maths.Angles, OnixRuntime.Core.Maths.Angles)
  name.vb: =(Angles, Angles)
- uid: OnixRuntime.Core.Maths.Angles.op_Inequality(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.op_Inequality(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  id: op_Inequality(OnixRuntime.Core.Maths.Angles,OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: operator !=(Angles, Angles)
  nameWithType: Angles.operator !=(Angles, Angles)
  fullName: OnixRuntime.Core.Maths.Angles.operator !=(OnixRuntime.Core.Maths.Angles, OnixRuntime.Core.Maths.Angles)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Inequality
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 150
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static bool operator !=(Angles a, Angles b)
    parameters:
    - id: a
      type: OnixRuntime.Core.Maths.Angles
    - id: b
      type: OnixRuntime.Core.Maths.Angles
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As Angles, b As Angles) As Boolean
  overload: OnixRuntime.Core.Maths.Angles.op_Inequality*
  nameWithType.vb: Angles.<>(Angles, Angles)
  fullName.vb: OnixRuntime.Core.Maths.Angles.<>(OnixRuntime.Core.Maths.Angles, OnixRuntime.Core.Maths.Angles)
  name.vb: <>(Angles, Angles)
- uid: OnixRuntime.Core.Maths.Angles.Equals(OnixRuntime.Core.Maths.Angles)
  commentId: M:OnixRuntime.Core.Maths.Angles.Equals(OnixRuntime.Core.Maths.Angles)
  id: Equals(OnixRuntime.Core.Maths.Angles)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Equals(Angles)
  nameWithType: Angles.Equals(Angles)
  fullName: OnixRuntime.Core.Maths.Angles.Equals(OnixRuntime.Core.Maths.Angles)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Equals
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 154
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(Angles other)
    parameters:
    - id: other
      type: OnixRuntime.Core.Maths.Angles
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Angles) As Boolean
  overload: OnixRuntime.Core.Maths.Angles.Equals*
  implements:
  - System.IEquatable{OnixRuntime.Core.Maths.Angles}.Equals(OnixRuntime.Core.Maths.Angles)
- uid: OnixRuntime.Core.Maths.Angles.Equals(System.Object)
  commentId: M:OnixRuntime.Core.Maths.Angles.Equals(System.Object)
  id: Equals(System.Object)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Angles.Equals(object?)
  fullName: OnixRuntime.Core.Maths.Angles.Equals(object?)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Equals
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 158
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OnixRuntime.Core.Maths.Angles.Equals*
  nameWithType.vb: Angles.Equals(Object)
  fullName.vb: OnixRuntime.Core.Maths.Angles.Equals(Object)
  name.vb: Equals(Object)
- uid: OnixRuntime.Core.Maths.Angles.GetHashCode
  commentId: M:OnixRuntime.Core.Maths.Angles.GetHashCode
  id: GetHashCode
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Angles.GetHashCode()
  fullName: OnixRuntime.Core.Maths.Angles.GetHashCode()
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: GetHashCode
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 164
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OnixRuntime.Core.Maths.Angles.GetHashCode*
- uid: OnixRuntime.Core.Maths.Angles.ToString
  commentId: M:OnixRuntime.Core.Maths.Angles.ToString
  id: ToString
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Angles.ToString()
  fullName: OnixRuntime.Core.Maths.Angles.ToString()
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: ToString
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 168
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: OnixRuntime.Core.Maths.Angles.ToString*
- uid: OnixRuntime.Core.Maths.Angles.ToString(System.String,System.Globalization.CultureInfo)
  commentId: M:OnixRuntime.Core.Maths.Angles.ToString(System.String,System.Globalization.CultureInfo)
  id: ToString(System.String,System.Globalization.CultureInfo)
  parent: OnixRuntime.Core.Maths.Angles
  langs:
  - csharp
  - vb
  name: ToString(string, CultureInfo?)
  nameWithType: Angles.ToString(string, CultureInfo?)
  fullName: OnixRuntime.Core.Maths.Angles.ToString(string, System.Globalization.CultureInfo?)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/Angles.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: ToString
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/Angles.cs
    startLine: 171
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public string ToString(string format, CultureInfo? formatProvider = null)
    parameters:
    - id: format
      type: System.String
    - id: formatProvider
      type: System.Globalization.CultureInfo
    return:
      type: System.String
    content.vb: Public Function ToString(format As String, formatProvider As CultureInfo = Nothing) As String
  overload: OnixRuntime.Core.Maths.Angles.ToString*
  nameWithType.vb: Angles.ToString(String, CultureInfo)
  fullName.vb: OnixRuntime.Core.Maths.Angles.ToString(String, System.Globalization.CultureInfo)
  name.vb: ToString(String, CultureInfo)
references:
- uid: OnixRuntime.Core.Maths
  commentId: N:OnixRuntime.Core.Maths
  href: OnixRuntime.html
  name: OnixRuntime.Core.Maths
  nameWithType: OnixRuntime.Core.Maths
  fullName: OnixRuntime.Core.Maths
  spec.csharp:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Core
    name: Core
    href: OnixRuntime.Core.html
  - name: .
  - uid: OnixRuntime.Core.Maths
    name: Maths
    href: OnixRuntime.Core.Maths.html
  spec.vb:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Core
    name: Core
    href: OnixRuntime.Core.html
  - name: .
  - uid: OnixRuntime.Core.Maths
    name: Maths
    href: OnixRuntime.Core.Maths.html
- uid: System.IEquatable{OnixRuntime.Core.Maths.Angles}
  commentId: T:System.IEquatable{OnixRuntime.Core.Maths.Angles}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Angles>
  nameWithType: IEquatable<Angles>
  fullName: System.IEquatable<OnixRuntime.Core.Maths.Angles>
  nameWithType.vb: IEquatable(Of Angles)
  fullName.vb: System.IEquatable(Of OnixRuntime.Core.Maths.Angles)
  name.vb: IEquatable(Of Angles)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OnixRuntime.Core.Maths.Angles
    name: Angles
    href: OnixRuntime.Core.Maths.Angles.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OnixRuntime.Core.Maths.Angles
    name: Angles
    href: OnixRuntime.Core.Maths.Angles.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OnixRuntime.Core.Maths.Angles.Length*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.Length
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_Length
  name: Length
  nameWithType: Angles.Length
  fullName: OnixRuntime.Core.Maths.Angles.Length
- uid: OnixRuntime.Core.Maths.Angles.Normalized*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.Normalized
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_Normalized
  name: Normalized
  nameWithType: Angles.Normalized
  fullName: OnixRuntime.Core.Maths.Angles.Normalized
- uid: OnixRuntime.Core.Maths.Angles
  commentId: T:OnixRuntime.Core.Maths.Angles
  parent: OnixRuntime.Core.Maths
  href: OnixRuntime.Core.Maths.Angles.html
  name: Angles
  nameWithType: Angles
  fullName: OnixRuntime.Core.Maths.Angles
- uid: OnixRuntime.Core.Maths.Angles.Magnitude*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.Magnitude
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_Magnitude
  name: Magnitude
  nameWithType: Angles.Magnitude
  fullName: OnixRuntime.Core.Maths.Angles.Magnitude
- uid: OnixRuntime.Core.Maths.Angles.MagnitudeSqr*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.MagnitudeSqr
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_MagnitudeSqr
  name: MagnitudeSqr
  nameWithType: Angles.MagnitudeSqr
  fullName: OnixRuntime.Core.Maths.Angles.MagnitudeSqr
- uid: OnixRuntime.Core.Maths.Angles.#ctor*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.#ctor
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles__ctor
  name: Angles
  nameWithType: Angles.Angles
  fullName: OnixRuntime.Core.Maths.Angles.Angles
  nameWithType.vb: Angles.New
  fullName.vb: OnixRuntime.Core.Maths.Angles.New
  name.vb: New
- uid: OnixRuntime.Core.Maths.Angles.AnglesRandom*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.AnglesRandom
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_AnglesRandom
  name: AnglesRandom
  nameWithType: Angles.AnglesRandom
  fullName: OnixRuntime.Core.Maths.Angles.AnglesRandom
- uid: OnixRuntime.Core.Maths.Angles.SetMagnitude*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.SetMagnitude
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_SetMagnitude_System_Single_
  name: SetMagnitude
  nameWithType: Angles.SetMagnitude
  fullName: OnixRuntime.Core.Maths.Angles.SetMagnitude
- uid: OnixRuntime.Core.Maths.Angles.SetDirection*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.SetDirection
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_SetDirection_System_Single_
  name: SetDirection
  nameWithType: Angles.SetDirection
  fullName: OnixRuntime.Core.Maths.Angles.SetDirection
- uid: OnixRuntime.Core.Maths.Angles.Distance*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.Distance
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_Distance_OnixRuntime_Core_Maths_Angles_
  name: Distance
  nameWithType: Angles.Distance
  fullName: OnixRuntime.Core.Maths.Angles.Distance
- uid: OnixRuntime.Core.Maths.Angles.Angle*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.Angle
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_Angle_OnixRuntime_Core_Maths_Angles_
  name: Angle
  nameWithType: Angles.Angle
  fullName: OnixRuntime.Core.Maths.Angles.Angle
- uid: OnixRuntime.Core.Maths.Angles.Dot*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.Dot
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_Dot_OnixRuntime_Core_Maths_Angles_
  name: Dot
  nameWithType: Angles.Dot
  fullName: OnixRuntime.Core.Maths.Angles.Dot
- uid: OnixRuntime.Core.Maths.Angles.Cross*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.Cross
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_Cross_OnixRuntime_Core_Maths_Angles_
  name: Cross
  nameWithType: Angles.Cross
  fullName: OnixRuntime.Core.Maths.Angles.Cross
- uid: OnixRuntime.Core.Maths.Angles.Lerp*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.Lerp
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_Lerp_OnixRuntime_Core_Maths_Angles_System_Single_
  name: Lerp
  nameWithType: Angles.Lerp
  fullName: OnixRuntime.Core.Maths.Angles.Lerp
- uid: OnixRuntime.Core.Maths.Angles.Min*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.Min
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_Min_OnixRuntime_Core_Maths_Angles_
  name: Min
  nameWithType: Angles.Min
  fullName: OnixRuntime.Core.Maths.Angles.Min
- uid: OnixRuntime.Core.Maths.Angles.Max*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.Max
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_Max_OnixRuntime_Core_Maths_Angles_
  name: Max
  nameWithType: Angles.Max
  fullName: OnixRuntime.Core.Maths.Angles.Max
- uid: OnixRuntime.Core.Maths.Angles.Clamp*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.Clamp
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_Clamp_OnixRuntime_Core_Maths_Angles_OnixRuntime_Core_Maths_Angles_
  name: Clamp
  nameWithType: Angles.Clamp
  fullName: OnixRuntime.Core.Maths.Angles.Clamp
- uid: OnixRuntime.Core.Maths.Angles.op_Addition*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.op_Addition
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_op_Addition_OnixRuntime_Core_Maths_Angles_OnixRuntime_Core_Maths_Angles_
  name: operator +
  nameWithType: Angles.operator +
  fullName: OnixRuntime.Core.Maths.Angles.operator +
  nameWithType.vb: Angles.+
  fullName.vb: OnixRuntime.Core.Maths.Angles.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Core.Maths.Angles.op_Addition*
    name: +
    href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_op_Addition_OnixRuntime_Core_Maths_Angles_OnixRuntime_Core_Maths_Angles_
- uid: OnixRuntime.Core.Maths.Angles.op_Subtraction*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.op_Subtraction
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_op_Subtraction_OnixRuntime_Core_Maths_Angles_OnixRuntime_Core_Maths_Angles_
  name: operator -
  nameWithType: Angles.operator -
  fullName: OnixRuntime.Core.Maths.Angles.operator -
  nameWithType.vb: Angles.-
  fullName.vb: OnixRuntime.Core.Maths.Angles.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Core.Maths.Angles.op_Subtraction*
    name: '-'
    href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_op_Subtraction_OnixRuntime_Core_Maths_Angles_OnixRuntime_Core_Maths_Angles_
- uid: OnixRuntime.Core.Maths.Angles.op_UnaryNegation*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.op_UnaryNegation
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_op_UnaryNegation_OnixRuntime_Core_Maths_Angles_
  name: operator -
  nameWithType: Angles.operator -
  fullName: OnixRuntime.Core.Maths.Angles.operator -
  nameWithType.vb: Angles.-
  fullName.vb: OnixRuntime.Core.Maths.Angles.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Core.Maths.Angles.op_UnaryNegation*
    name: '-'
    href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_op_UnaryNegation_OnixRuntime_Core_Maths_Angles_
- uid: OnixRuntime.Core.Maths.Angles.op_Multiply*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.op_Multiply
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_op_Multiply_OnixRuntime_Core_Maths_Angles_OnixRuntime_Core_Maths_Angles_
  name: operator *
  nameWithType: Angles.operator *
  fullName: OnixRuntime.Core.Maths.Angles.operator *
  nameWithType.vb: Angles.*
  fullName.vb: OnixRuntime.Core.Maths.Angles.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Core.Maths.Angles.op_Multiply*
    name: '*'
    href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_op_Multiply_OnixRuntime_Core_Maths_Angles_OnixRuntime_Core_Maths_Angles_
- uid: OnixRuntime.Core.Maths.Angles.op_Division*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.op_Division
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_op_Division_OnixRuntime_Core_Maths_Angles_OnixRuntime_Core_Maths_Angles_
  name: operator /
  nameWithType: Angles.operator /
  fullName: OnixRuntime.Core.Maths.Angles.operator /
  nameWithType.vb: Angles./
  fullName.vb: OnixRuntime.Core.Maths.Angles./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Core.Maths.Angles.op_Division*
    name: /
    href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_op_Division_OnixRuntime_Core_Maths_Angles_OnixRuntime_Core_Maths_Angles_
- uid: OnixRuntime.Core.Maths.Angles.op_Equality*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.op_Equality
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_op_Equality_OnixRuntime_Core_Maths_Angles_OnixRuntime_Core_Maths_Angles_
  name: operator ==
  nameWithType: Angles.operator ==
  fullName: OnixRuntime.Core.Maths.Angles.operator ==
  nameWithType.vb: Angles.=
  fullName.vb: OnixRuntime.Core.Maths.Angles.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Core.Maths.Angles.op_Equality*
    name: ==
    href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_op_Equality_OnixRuntime_Core_Maths_Angles_OnixRuntime_Core_Maths_Angles_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OnixRuntime.Core.Maths.Angles.op_Inequality*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.op_Inequality
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_op_Inequality_OnixRuntime_Core_Maths_Angles_OnixRuntime_Core_Maths_Angles_
  name: operator !=
  nameWithType: Angles.operator !=
  fullName: OnixRuntime.Core.Maths.Angles.operator !=
  nameWithType.vb: Angles.<>
  fullName.vb: OnixRuntime.Core.Maths.Angles.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Core.Maths.Angles.op_Inequality*
    name: '!='
    href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_op_Inequality_OnixRuntime_Core_Maths_Angles_OnixRuntime_Core_Maths_Angles_
- uid: OnixRuntime.Core.Maths.Angles.Equals*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.Equals
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_Equals_OnixRuntime_Core_Maths_Angles_
  name: Equals
  nameWithType: Angles.Equals
  fullName: OnixRuntime.Core.Maths.Angles.Equals
- uid: System.IEquatable{OnixRuntime.Core.Maths.Angles}.Equals(OnixRuntime.Core.Maths.Angles)
  commentId: M:System.IEquatable{OnixRuntime.Core.Maths.Angles}.Equals(OnixRuntime.Core.Maths.Angles)
  parent: System.IEquatable{OnixRuntime.Core.Maths.Angles}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Angles)
  nameWithType: IEquatable<Angles>.Equals(Angles)
  fullName: System.IEquatable<OnixRuntime.Core.Maths.Angles>.Equals(OnixRuntime.Core.Maths.Angles)
  nameWithType.vb: IEquatable(Of Angles).Equals(Angles)
  fullName.vb: System.IEquatable(Of OnixRuntime.Core.Maths.Angles).Equals(OnixRuntime.Core.Maths.Angles)
  spec.csharp:
  - uid: System.IEquatable{OnixRuntime.Core.Maths.Angles}.Equals(OnixRuntime.Core.Maths.Angles)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OnixRuntime.Core.Maths.Angles
    name: Angles
    href: OnixRuntime.Core.Maths.Angles.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OnixRuntime.Core.Maths.Angles}.Equals(OnixRuntime.Core.Maths.Angles)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OnixRuntime.Core.Maths.Angles
    name: Angles
    href: OnixRuntime.Core.Maths.Angles.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OnixRuntime.Core.Maths.Angles.GetHashCode*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.GetHashCode
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_GetHashCode
  name: GetHashCode
  nameWithType: Angles.GetHashCode
  fullName: OnixRuntime.Core.Maths.Angles.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: OnixRuntime.Core.Maths.Angles.ToString*
  commentId: Overload:OnixRuntime.Core.Maths.Angles.ToString
  href: OnixRuntime.Core.Maths.Angles.html#OnixRuntime_Core_Maths_Angles_ToString
  name: ToString
  nameWithType: Angles.ToString
  fullName: OnixRuntime.Core.Maths.Angles.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
