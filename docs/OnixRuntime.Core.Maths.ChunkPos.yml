### YamlMime:ManagedReference
items:
- uid: OnixRuntime.Core.Maths.ChunkPos
  commentId: T:OnixRuntime.Core.Maths.ChunkPos
  id: ChunkPos
  parent: OnixRuntime.Core.Maths
  children:
  - OnixRuntime.Core.Maths.ChunkPos.#ctor(OnixRuntime.Core.Maths.BlockPos)
  - OnixRuntime.Core.Maths.ChunkPos.#ctor(System.Int32,System.Int32)
  - OnixRuntime.Core.Maths.ChunkPos.Equals(OnixRuntime.Core.Maths.ChunkPos)
  - OnixRuntime.Core.Maths.ChunkPos.Equals(System.Object)
  - OnixRuntime.Core.Maths.ChunkPos.FromWorld(OnixRuntime.Core.Maths.BlockPos)
  - OnixRuntime.Core.Maths.ChunkPos.FromWorld(System.Int32,System.Int32)
  - OnixRuntime.Core.Maths.ChunkPos.GetHashCode
  - OnixRuntime.Core.Maths.ChunkPos.GetInChunkBlockPos(System.Int32,System.Int32)
  - OnixRuntime.Core.Maths.ChunkPos.X
  - OnixRuntime.Core.Maths.ChunkPos.Y
  - OnixRuntime.Core.Maths.ChunkPos.op_Equality(OnixRuntime.Core.Maths.ChunkPos,OnixRuntime.Core.Maths.ChunkPos)
  - OnixRuntime.Core.Maths.ChunkPos.op_Inequality(OnixRuntime.Core.Maths.ChunkPos,OnixRuntime.Core.Maths.ChunkPos)
  langs:
  - csharp
  - vb
  name: ChunkPos
  nameWithType: ChunkPos
  fullName: OnixRuntime.Core.Maths.ChunkPos
  type: Struct
  source:
    remote:
      path: OnixRuntime/Core/Maths/ChunkPos.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: ChunkPos
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/ChunkPos.cs
    startLine: 2
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: 'public struct ChunkPos : IEquatable<ChunkPos>'
    content.vb: Public Structure ChunkPos Implements IEquatable(Of ChunkPos)
  implements:
  - System.IEquatable{OnixRuntime.Core.Maths.ChunkPos}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: OnixRuntime.Core.Maths.ChunkPos.X
  commentId: F:OnixRuntime.Core.Maths.ChunkPos.X
  id: X
  parent: OnixRuntime.Core.Maths.ChunkPos
  langs:
  - csharp
  - vb
  name: X
  nameWithType: ChunkPos.X
  fullName: OnixRuntime.Core.Maths.ChunkPos.X
  type: Field
  source:
    remote:
      path: OnixRuntime/Core/Maths/ChunkPos.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: X
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/ChunkPos.cs
    startLine: 3
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public int X
    return:
      type: System.Int32
    content.vb: Public X As Integer
- uid: OnixRuntime.Core.Maths.ChunkPos.Y
  commentId: F:OnixRuntime.Core.Maths.ChunkPos.Y
  id: Y
  parent: OnixRuntime.Core.Maths.ChunkPos
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: ChunkPos.Y
  fullName: OnixRuntime.Core.Maths.ChunkPos.Y
  type: Field
  source:
    remote:
      path: OnixRuntime/Core/Maths/ChunkPos.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Y
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/ChunkPos.cs
    startLine: 4
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public int Y
    return:
      type: System.Int32
    content.vb: Public Y As Integer
- uid: OnixRuntime.Core.Maths.ChunkPos.#ctor(System.Int32,System.Int32)
  commentId: M:OnixRuntime.Core.Maths.ChunkPos.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: OnixRuntime.Core.Maths.ChunkPos
  langs:
  - csharp
  - vb
  name: ChunkPos(int, int)
  nameWithType: ChunkPos.ChunkPos(int, int)
  fullName: OnixRuntime.Core.Maths.ChunkPos.ChunkPos(int, int)
  type: Constructor
  source:
    remote:
      path: OnixRuntime/Core/Maths/ChunkPos.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: .ctor
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/ChunkPos.cs
    startLine: 6
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public ChunkPos(int x, int y)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    content.vb: Public Sub New(x As Integer, y As Integer)
  overload: OnixRuntime.Core.Maths.ChunkPos.#ctor*
  nameWithType.vb: ChunkPos.New(Integer, Integer)
  fullName.vb: OnixRuntime.Core.Maths.ChunkPos.New(Integer, Integer)
  name.vb: New(Integer, Integer)
- uid: OnixRuntime.Core.Maths.ChunkPos.#ctor(OnixRuntime.Core.Maths.BlockPos)
  commentId: M:OnixRuntime.Core.Maths.ChunkPos.#ctor(OnixRuntime.Core.Maths.BlockPos)
  id: '#ctor(OnixRuntime.Core.Maths.BlockPos)'
  parent: OnixRuntime.Core.Maths.ChunkPos
  langs:
  - csharp
  - vb
  name: ChunkPos(BlockPos)
  nameWithType: ChunkPos.ChunkPos(BlockPos)
  fullName: OnixRuntime.Core.Maths.ChunkPos.ChunkPos(OnixRuntime.Core.Maths.BlockPos)
  type: Constructor
  source:
    remote:
      path: OnixRuntime/Core/Maths/ChunkPos.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: .ctor
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/ChunkPos.cs
    startLine: 10
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public ChunkPos(BlockPos pos)
    parameters:
    - id: pos
      type: OnixRuntime.Core.Maths.BlockPos
    content.vb: Public Sub New(pos As BlockPos)
  overload: OnixRuntime.Core.Maths.ChunkPos.#ctor*
  nameWithType.vb: ChunkPos.New(BlockPos)
  fullName.vb: OnixRuntime.Core.Maths.ChunkPos.New(OnixRuntime.Core.Maths.BlockPos)
  name.vb: New(BlockPos)
- uid: OnixRuntime.Core.Maths.ChunkPos.FromWorld(OnixRuntime.Core.Maths.BlockPos)
  commentId: M:OnixRuntime.Core.Maths.ChunkPos.FromWorld(OnixRuntime.Core.Maths.BlockPos)
  id: FromWorld(OnixRuntime.Core.Maths.BlockPos)
  parent: OnixRuntime.Core.Maths.ChunkPos
  langs:
  - csharp
  - vb
  name: FromWorld(BlockPos)
  nameWithType: ChunkPos.FromWorld(BlockPos)
  fullName: OnixRuntime.Core.Maths.ChunkPos.FromWorld(OnixRuntime.Core.Maths.BlockPos)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/ChunkPos.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: FromWorld
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/ChunkPos.cs
    startLine: 15
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static ChunkPos FromWorld(BlockPos pos)
    parameters:
    - id: pos
      type: OnixRuntime.Core.Maths.BlockPos
    return:
      type: OnixRuntime.Core.Maths.ChunkPos
    content.vb: Public Shared Function FromWorld(pos As BlockPos) As ChunkPos
  overload: OnixRuntime.Core.Maths.ChunkPos.FromWorld*
- uid: OnixRuntime.Core.Maths.ChunkPos.FromWorld(System.Int32,System.Int32)
  commentId: M:OnixRuntime.Core.Maths.ChunkPos.FromWorld(System.Int32,System.Int32)
  id: FromWorld(System.Int32,System.Int32)
  parent: OnixRuntime.Core.Maths.ChunkPos
  langs:
  - csharp
  - vb
  name: FromWorld(int, int)
  nameWithType: ChunkPos.FromWorld(int, int)
  fullName: OnixRuntime.Core.Maths.ChunkPos.FromWorld(int, int)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/ChunkPos.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: FromWorld
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/ChunkPos.cs
    startLine: 18
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static ChunkPos FromWorld(int worldX, int worldZ)
    parameters:
    - id: worldX
      type: System.Int32
    - id: worldZ
      type: System.Int32
    return:
      type: OnixRuntime.Core.Maths.ChunkPos
    content.vb: Public Shared Function FromWorld(worldX As Integer, worldZ As Integer) As ChunkPos
  overload: OnixRuntime.Core.Maths.ChunkPos.FromWorld*
  nameWithType.vb: ChunkPos.FromWorld(Integer, Integer)
  fullName.vb: OnixRuntime.Core.Maths.ChunkPos.FromWorld(Integer, Integer)
  name.vb: FromWorld(Integer, Integer)
- uid: OnixRuntime.Core.Maths.ChunkPos.GetInChunkBlockPos(System.Int32,System.Int32)
  commentId: M:OnixRuntime.Core.Maths.ChunkPos.GetInChunkBlockPos(System.Int32,System.Int32)
  id: GetInChunkBlockPos(System.Int32,System.Int32)
  parent: OnixRuntime.Core.Maths.ChunkPos
  langs:
  - csharp
  - vb
  name: GetInChunkBlockPos(int, int)
  nameWithType: ChunkPos.GetInChunkBlockPos(int, int)
  fullName: OnixRuntime.Core.Maths.ChunkPos.GetInChunkBlockPos(int, int)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/ChunkPos.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: GetInChunkBlockPos
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/ChunkPos.cs
    startLine: 22
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static ChunkPos GetInChunkBlockPos(int worldX, int worldZ)
    parameters:
    - id: worldX
      type: System.Int32
    - id: worldZ
      type: System.Int32
    return:
      type: OnixRuntime.Core.Maths.ChunkPos
    content.vb: Public Shared Function GetInChunkBlockPos(worldX As Integer, worldZ As Integer) As ChunkPos
  overload: OnixRuntime.Core.Maths.ChunkPos.GetInChunkBlockPos*
  nameWithType.vb: ChunkPos.GetInChunkBlockPos(Integer, Integer)
  fullName.vb: OnixRuntime.Core.Maths.ChunkPos.GetInChunkBlockPos(Integer, Integer)
  name.vb: GetInChunkBlockPos(Integer, Integer)
- uid: OnixRuntime.Core.Maths.ChunkPos.op_Equality(OnixRuntime.Core.Maths.ChunkPos,OnixRuntime.Core.Maths.ChunkPos)
  commentId: M:OnixRuntime.Core.Maths.ChunkPos.op_Equality(OnixRuntime.Core.Maths.ChunkPos,OnixRuntime.Core.Maths.ChunkPos)
  id: op_Equality(OnixRuntime.Core.Maths.ChunkPos,OnixRuntime.Core.Maths.ChunkPos)
  parent: OnixRuntime.Core.Maths.ChunkPos
  langs:
  - csharp
  - vb
  name: operator ==(ChunkPos, ChunkPos)
  nameWithType: ChunkPos.operator ==(ChunkPos, ChunkPos)
  fullName: OnixRuntime.Core.Maths.ChunkPos.operator ==(OnixRuntime.Core.Maths.ChunkPos, OnixRuntime.Core.Maths.ChunkPos)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/ChunkPos.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Equality
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/ChunkPos.cs
    startLine: 33
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static bool operator ==(ChunkPos lhs, ChunkPos rhs)
    parameters:
    - id: lhs
      type: OnixRuntime.Core.Maths.ChunkPos
    - id: rhs
      type: OnixRuntime.Core.Maths.ChunkPos
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(lhs As ChunkPos, rhs As ChunkPos) As Boolean
  overload: OnixRuntime.Core.Maths.ChunkPos.op_Equality*
  nameWithType.vb: ChunkPos.=(ChunkPos, ChunkPos)
  fullName.vb: OnixRuntime.Core.Maths.ChunkPos.=(OnixRuntime.Core.Maths.ChunkPos, OnixRuntime.Core.Maths.ChunkPos)
  name.vb: =(ChunkPos, ChunkPos)
- uid: OnixRuntime.Core.Maths.ChunkPos.op_Inequality(OnixRuntime.Core.Maths.ChunkPos,OnixRuntime.Core.Maths.ChunkPos)
  commentId: M:OnixRuntime.Core.Maths.ChunkPos.op_Inequality(OnixRuntime.Core.Maths.ChunkPos,OnixRuntime.Core.Maths.ChunkPos)
  id: op_Inequality(OnixRuntime.Core.Maths.ChunkPos,OnixRuntime.Core.Maths.ChunkPos)
  parent: OnixRuntime.Core.Maths.ChunkPos
  langs:
  - csharp
  - vb
  name: operator !=(ChunkPos, ChunkPos)
  nameWithType: ChunkPos.operator !=(ChunkPos, ChunkPos)
  fullName: OnixRuntime.Core.Maths.ChunkPos.operator !=(OnixRuntime.Core.Maths.ChunkPos, OnixRuntime.Core.Maths.ChunkPos)
  type: Operator
  source:
    remote:
      path: OnixRuntime/Core/Maths/ChunkPos.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: op_Inequality
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/ChunkPos.cs
    startLine: 36
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  syntax:
    content: public static bool operator !=(ChunkPos lhs, ChunkPos rhs)
    parameters:
    - id: lhs
      type: OnixRuntime.Core.Maths.ChunkPos
    - id: rhs
      type: OnixRuntime.Core.Maths.ChunkPos
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(lhs As ChunkPos, rhs As ChunkPos) As Boolean
  overload: OnixRuntime.Core.Maths.ChunkPos.op_Inequality*
  nameWithType.vb: ChunkPos.<>(ChunkPos, ChunkPos)
  fullName.vb: OnixRuntime.Core.Maths.ChunkPos.<>(OnixRuntime.Core.Maths.ChunkPos, OnixRuntime.Core.Maths.ChunkPos)
  name.vb: <>(ChunkPos, ChunkPos)
- uid: OnixRuntime.Core.Maths.ChunkPos.Equals(System.Object)
  commentId: M:OnixRuntime.Core.Maths.ChunkPos.Equals(System.Object)
  id: Equals(System.Object)
  parent: OnixRuntime.Core.Maths.ChunkPos
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: ChunkPos.Equals(object?)
  fullName: OnixRuntime.Core.Maths.ChunkPos.Equals(object?)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/ChunkPos.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Equals
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/ChunkPos.cs
    startLine: 40
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OnixRuntime.Core.Maths.ChunkPos.Equals*
  nameWithType.vb: ChunkPos.Equals(Object)
  fullName.vb: OnixRuntime.Core.Maths.ChunkPos.Equals(Object)
  name.vb: Equals(Object)
- uid: OnixRuntime.Core.Maths.ChunkPos.Equals(OnixRuntime.Core.Maths.ChunkPos)
  commentId: M:OnixRuntime.Core.Maths.ChunkPos.Equals(OnixRuntime.Core.Maths.ChunkPos)
  id: Equals(OnixRuntime.Core.Maths.ChunkPos)
  parent: OnixRuntime.Core.Maths.ChunkPos
  langs:
  - csharp
  - vb
  name: Equals(ChunkPos)
  nameWithType: ChunkPos.Equals(ChunkPos)
  fullName: OnixRuntime.Core.Maths.ChunkPos.Equals(OnixRuntime.Core.Maths.ChunkPos)
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/ChunkPos.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: Equals
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/ChunkPos.cs
    startLine: 47
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(ChunkPos other)
    parameters:
    - id: other
      type: OnixRuntime.Core.Maths.ChunkPos
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As ChunkPos) As Boolean
  overload: OnixRuntime.Core.Maths.ChunkPos.Equals*
  implements:
  - System.IEquatable{OnixRuntime.Core.Maths.ChunkPos}.Equals(OnixRuntime.Core.Maths.ChunkPos)
- uid: OnixRuntime.Core.Maths.ChunkPos.GetHashCode
  commentId: M:OnixRuntime.Core.Maths.ChunkPos.GetHashCode
  id: GetHashCode
  parent: OnixRuntime.Core.Maths.ChunkPos
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ChunkPos.GetHashCode()
  fullName: OnixRuntime.Core.Maths.ChunkPos.GetHashCode()
  type: Method
  source:
    remote:
      path: OnixRuntime/Core/Maths/ChunkPos.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: GetHashCode
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Core/Maths/ChunkPos.cs
    startLine: 51
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Core.Maths
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OnixRuntime.Core.Maths.ChunkPos.GetHashCode*
references:
- uid: OnixRuntime.Core.Maths
  commentId: N:OnixRuntime.Core.Maths
  href: OnixRuntime.html
  name: OnixRuntime.Core.Maths
  nameWithType: OnixRuntime.Core.Maths
  fullName: OnixRuntime.Core.Maths
  spec.csharp:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Core
    name: Core
    href: OnixRuntime.Core.html
  - name: .
  - uid: OnixRuntime.Core.Maths
    name: Maths
    href: OnixRuntime.Core.Maths.html
  spec.vb:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Core
    name: Core
    href: OnixRuntime.Core.html
  - name: .
  - uid: OnixRuntime.Core.Maths
    name: Maths
    href: OnixRuntime.Core.Maths.html
- uid: System.IEquatable{OnixRuntime.Core.Maths.ChunkPos}
  commentId: T:System.IEquatable{OnixRuntime.Core.Maths.ChunkPos}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ChunkPos>
  nameWithType: IEquatable<ChunkPos>
  fullName: System.IEquatable<OnixRuntime.Core.Maths.ChunkPos>
  nameWithType.vb: IEquatable(Of ChunkPos)
  fullName.vb: System.IEquatable(Of OnixRuntime.Core.Maths.ChunkPos)
  name.vb: IEquatable(Of ChunkPos)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OnixRuntime.Core.Maths.ChunkPos
    name: ChunkPos
    href: OnixRuntime.Core.Maths.ChunkPos.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OnixRuntime.Core.Maths.ChunkPos
    name: ChunkPos
    href: OnixRuntime.Core.Maths.ChunkPos.html
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OnixRuntime.Core.Maths.ChunkPos.#ctor*
  commentId: Overload:OnixRuntime.Core.Maths.ChunkPos.#ctor
  href: OnixRuntime.Core.Maths.ChunkPos.html#OnixRuntime_Core_Maths_ChunkPos__ctor_System_Int32_System_Int32_
  name: ChunkPos
  nameWithType: ChunkPos.ChunkPos
  fullName: OnixRuntime.Core.Maths.ChunkPos.ChunkPos
  nameWithType.vb: ChunkPos.New
  fullName.vb: OnixRuntime.Core.Maths.ChunkPos.New
  name.vb: New
- uid: OnixRuntime.Core.Maths.BlockPos
  commentId: T:OnixRuntime.Core.Maths.BlockPos
  parent: OnixRuntime.Core.Maths
  href: OnixRuntime.Core.Maths.BlockPos.html
  name: BlockPos
  nameWithType: BlockPos
  fullName: OnixRuntime.Core.Maths.BlockPos
- uid: OnixRuntime.Core.Maths.ChunkPos.FromWorld*
  commentId: Overload:OnixRuntime.Core.Maths.ChunkPos.FromWorld
  href: OnixRuntime.Core.Maths.ChunkPos.html#OnixRuntime_Core_Maths_ChunkPos_FromWorld_OnixRuntime_Core_Maths_BlockPos_
  name: FromWorld
  nameWithType: ChunkPos.FromWorld
  fullName: OnixRuntime.Core.Maths.ChunkPos.FromWorld
- uid: OnixRuntime.Core.Maths.ChunkPos
  commentId: T:OnixRuntime.Core.Maths.ChunkPos
  parent: OnixRuntime.Core.Maths
  href: OnixRuntime.Core.Maths.ChunkPos.html
  name: ChunkPos
  nameWithType: ChunkPos
  fullName: OnixRuntime.Core.Maths.ChunkPos
- uid: OnixRuntime.Core.Maths.ChunkPos.GetInChunkBlockPos*
  commentId: Overload:OnixRuntime.Core.Maths.ChunkPos.GetInChunkBlockPos
  href: OnixRuntime.Core.Maths.ChunkPos.html#OnixRuntime_Core_Maths_ChunkPos_GetInChunkBlockPos_System_Int32_System_Int32_
  name: GetInChunkBlockPos
  nameWithType: ChunkPos.GetInChunkBlockPos
  fullName: OnixRuntime.Core.Maths.ChunkPos.GetInChunkBlockPos
- uid: OnixRuntime.Core.Maths.ChunkPos.op_Equality*
  commentId: Overload:OnixRuntime.Core.Maths.ChunkPos.op_Equality
  href: OnixRuntime.Core.Maths.ChunkPos.html#OnixRuntime_Core_Maths_ChunkPos_op_Equality_OnixRuntime_Core_Maths_ChunkPos_OnixRuntime_Core_Maths_ChunkPos_
  name: operator ==
  nameWithType: ChunkPos.operator ==
  fullName: OnixRuntime.Core.Maths.ChunkPos.operator ==
  nameWithType.vb: ChunkPos.=
  fullName.vb: OnixRuntime.Core.Maths.ChunkPos.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Core.Maths.ChunkPos.op_Equality*
    name: ==
    href: OnixRuntime.Core.Maths.ChunkPos.html#OnixRuntime_Core_Maths_ChunkPos_op_Equality_OnixRuntime_Core_Maths_ChunkPos_OnixRuntime_Core_Maths_ChunkPos_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OnixRuntime.Core.Maths.ChunkPos.op_Inequality*
  commentId: Overload:OnixRuntime.Core.Maths.ChunkPos.op_Inequality
  href: OnixRuntime.Core.Maths.ChunkPos.html#OnixRuntime_Core_Maths_ChunkPos_op_Inequality_OnixRuntime_Core_Maths_ChunkPos_OnixRuntime_Core_Maths_ChunkPos_
  name: operator !=
  nameWithType: ChunkPos.operator !=
  fullName: OnixRuntime.Core.Maths.ChunkPos.operator !=
  nameWithType.vb: ChunkPos.<>
  fullName.vb: OnixRuntime.Core.Maths.ChunkPos.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OnixRuntime.Core.Maths.ChunkPos.op_Inequality*
    name: '!='
    href: OnixRuntime.Core.Maths.ChunkPos.html#OnixRuntime_Core_Maths_ChunkPos_op_Inequality_OnixRuntime_Core_Maths_ChunkPos_OnixRuntime_Core_Maths_ChunkPos_
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: OnixRuntime.Core.Maths.ChunkPos.Equals*
  commentId: Overload:OnixRuntime.Core.Maths.ChunkPos.Equals
  href: OnixRuntime.Core.Maths.ChunkPos.html#OnixRuntime_Core_Maths_ChunkPos_Equals_System_Object_
  name: Equals
  nameWithType: ChunkPos.Equals
  fullName: OnixRuntime.Core.Maths.ChunkPos.Equals
- uid: System.IEquatable{OnixRuntime.Core.Maths.ChunkPos}.Equals(OnixRuntime.Core.Maths.ChunkPos)
  commentId: M:System.IEquatable{OnixRuntime.Core.Maths.ChunkPos}.Equals(OnixRuntime.Core.Maths.ChunkPos)
  parent: System.IEquatable{OnixRuntime.Core.Maths.ChunkPos}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(ChunkPos)
  nameWithType: IEquatable<ChunkPos>.Equals(ChunkPos)
  fullName: System.IEquatable<OnixRuntime.Core.Maths.ChunkPos>.Equals(OnixRuntime.Core.Maths.ChunkPos)
  nameWithType.vb: IEquatable(Of ChunkPos).Equals(ChunkPos)
  fullName.vb: System.IEquatable(Of OnixRuntime.Core.Maths.ChunkPos).Equals(OnixRuntime.Core.Maths.ChunkPos)
  spec.csharp:
  - uid: System.IEquatable{OnixRuntime.Core.Maths.ChunkPos}.Equals(OnixRuntime.Core.Maths.ChunkPos)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OnixRuntime.Core.Maths.ChunkPos
    name: ChunkPos
    href: OnixRuntime.Core.Maths.ChunkPos.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OnixRuntime.Core.Maths.ChunkPos}.Equals(OnixRuntime.Core.Maths.ChunkPos)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OnixRuntime.Core.Maths.ChunkPos
    name: ChunkPos
    href: OnixRuntime.Core.Maths.ChunkPos.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OnixRuntime.Core.Maths.ChunkPos.GetHashCode*
  commentId: Overload:OnixRuntime.Core.Maths.ChunkPos.GetHashCode
  href: OnixRuntime.Core.Maths.ChunkPos.html#OnixRuntime_Core_Maths_ChunkPos_GetHashCode
  name: GetHashCode
  nameWithType: ChunkPos.GetHashCode
  fullName: OnixRuntime.Core.Maths.ChunkPos.GetHashCode
