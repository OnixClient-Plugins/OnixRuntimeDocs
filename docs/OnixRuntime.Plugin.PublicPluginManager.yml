### YamlMime:ManagedReference
items:
- uid: OnixRuntime.Plugin.PublicPluginManager
  commentId: T:OnixRuntime.Plugin.PublicPluginManager
  id: PublicPluginManager
  parent: OnixRuntime.Plugin
  children:
  - OnixRuntime.Plugin.PublicPluginManager.GetDelegatesForEventInvocations(System.Delegate[])
  - OnixRuntime.Plugin.PublicPluginManager.GetPluginByUuid(System.String,System.Boolean)
  - OnixRuntime.Plugin.PublicPluginManager.GetPlugins(System.Boolean)
  - OnixRuntime.Plugin.PublicPluginManager.PluginDirectory
  - OnixRuntime.Plugin.PublicPluginManager.PluginsLock
  - OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPlugins
  - OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPluginsInTheBackground
  - OnixRuntime.Plugin.PublicPluginManager.SetAndLoadConfig(System.String)
  langs:
  - csharp
  - vb
  name: PublicPluginManager
  nameWithType: PublicPluginManager
  fullName: OnixRuntime.Plugin.PublicPluginManager
  type: Class
  source:
    remote:
      path: OnixRuntime/Plugin/PublicPluginManager.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: PublicPluginManager
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Plugin/PublicPluginManager.cs
    startLine: 9
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Plugin
  summary: Wrapper allowing you to access public plugin data.
  example: []
  syntax:
    content: public class PublicPluginManager
    content.vb: Public Class PublicPluginManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OnixRuntime.Plugin.PublicPluginManager.PluginDirectory
  commentId: P:OnixRuntime.Plugin.PublicPluginManager.PluginDirectory
  id: PluginDirectory
  parent: OnixRuntime.Plugin.PublicPluginManager
  langs:
  - csharp
  - vb
  name: PluginDirectory
  nameWithType: PublicPluginManager.PluginDirectory
  fullName: OnixRuntime.Plugin.PublicPluginManager.PluginDirectory
  type: Property
  source:
    remote:
      path: OnixRuntime/Plugin/PublicPluginManager.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: PluginDirectory
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Plugin/PublicPluginManager.cs
    startLine: 15
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Plugin
  summary: >-
    Gets the directory where plugins are stored.

    OnixClient/Plugins/plugins
  example: []
  syntax:
    content: public static string PluginDirectory { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property PluginDirectory As String
  overload: OnixRuntime.Plugin.PublicPluginManager.PluginDirectory*
- uid: OnixRuntime.Plugin.PublicPluginManager.PluginsLock
  commentId: F:OnixRuntime.Plugin.PublicPluginManager.PluginsLock
  id: PluginsLock
  parent: OnixRuntime.Plugin.PublicPluginManager
  langs:
  - csharp
  - vb
  name: PluginsLock
  nameWithType: PublicPluginManager.PluginsLock
  fullName: OnixRuntime.Plugin.PublicPluginManager.PluginsLock
  type: Field
  source:
    remote:
      path: OnixRuntime/Plugin/PublicPluginManager.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: PluginsLock
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Plugin/PublicPluginManager.cs
    startLine: 21
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Plugin
  summary: >-
    When you want to access plugins, you can use this lock.

    Note that by default <xref href="OnixRuntime.Plugin.PublicPluginManager.GetPlugins(System.Boolean)" data-throw-if-not-resolved="false"></xref> will lock the lock for you in reader mode.
  example: []
  syntax:
    content: public ReaderWriterLockSlim PluginsLock
    return:
      type: System.Threading.ReaderWriterLockSlim
    content.vb: Public PluginsLock As ReaderWriterLockSlim
- uid: OnixRuntime.Plugin.PublicPluginManager.GetDelegatesForEventInvocations(System.Delegate[])
  commentId: M:OnixRuntime.Plugin.PublicPluginManager.GetDelegatesForEventInvocations(System.Delegate[])
  id: GetDelegatesForEventInvocations(System.Delegate[])
  parent: OnixRuntime.Plugin.PublicPluginManager
  langs:
  - csharp
  - vb
  name: GetDelegatesForEventInvocations(Delegate[]?)
  nameWithType: PublicPluginManager.GetDelegatesForEventInvocations(Delegate[]?)
  fullName: OnixRuntime.Plugin.PublicPluginManager.GetDelegatesForEventInvocations(System.Delegate[]?)
  type: Method
  source:
    remote:
      path: OnixRuntime/Plugin/PublicPluginManager.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: GetDelegatesForEventInvocations
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Plugin/PublicPluginManager.cs
    startLine: 28
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Plugin
  summary: Gets delegates for event invocations. When you are having a public event available to other plugins, you can use this so trust is respected and not overshared.
  example: []
  syntax:
    content: public static IEnumerable<Delegate> GetDelegatesForEventInvocations(Delegate[]? functions)
    parameters:
    - id: functions
      type: System.Delegate[]
      description: The array of delegate functions.
    return:
      type: System.Collections.Generic.IEnumerable{System.Delegate}
      description: An enumerable of delegates and their trust status.
    content.vb: Public Shared Function GetDelegatesForEventInvocations(functions As [Delegate]()) As IEnumerable(Of [Delegate])
  overload: OnixRuntime.Plugin.PublicPluginManager.GetDelegatesForEventInvocations*
  nameWithType.vb: PublicPluginManager.GetDelegatesForEventInvocations(Delegate())
  fullName.vb: OnixRuntime.Plugin.PublicPluginManager.GetDelegatesForEventInvocations(System.Delegate())
  name.vb: GetDelegatesForEventInvocations(Delegate())
- uid: OnixRuntime.Plugin.PublicPluginManager.GetPlugins(System.Boolean)
  commentId: M:OnixRuntime.Plugin.PublicPluginManager.GetPlugins(System.Boolean)
  id: GetPlugins(System.Boolean)
  parent: OnixRuntime.Plugin.PublicPluginManager
  langs:
  - csharp
  - vb
  name: GetPlugins(bool)
  nameWithType: PublicPluginManager.GetPlugins(bool)
  fullName: OnixRuntime.Plugin.PublicPluginManager.GetPlugins(bool)
  type: Method
  source:
    remote:
      path: OnixRuntime/Plugin/PublicPluginManager.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: GetPlugins
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Plugin/PublicPluginManager.cs
    startLine: 55
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Plugin
  summary: >-
    Gets every plugin that is loaded or unloaded but available.

    This will by default lock the lock for reading, if you want to avoid locking the lock or have already locked it, set lockPluginsLock to false.
  example: []
  syntax:
    content: public static IEnumerable<IOnixPlugin> GetPlugins(bool lockPluginsLock = true)
    parameters:
    - id: lockPluginsLock
      type: System.Boolean
      description: Defaults to true, set to false if you wish to lock the lock yourself.
    return:
      type: System.Collections.Generic.IEnumerable{OnixRuntime.Plugin.IOnixPlugin}
      description: The plugins as an IEnumerable.
    content.vb: Public Shared Function GetPlugins(lockPluginsLock As Boolean = True) As IEnumerable(Of IOnixPlugin)
  overload: OnixRuntime.Plugin.PublicPluginManager.GetPlugins*
  nameWithType.vb: PublicPluginManager.GetPlugins(Boolean)
  fullName.vb: OnixRuntime.Plugin.PublicPluginManager.GetPlugins(Boolean)
  name.vb: GetPlugins(Boolean)
- uid: OnixRuntime.Plugin.PublicPluginManager.GetPluginByUuid(System.String,System.Boolean)
  commentId: M:OnixRuntime.Plugin.PublicPluginManager.GetPluginByUuid(System.String,System.Boolean)
  id: GetPluginByUuid(System.String,System.Boolean)
  parent: OnixRuntime.Plugin.PublicPluginManager
  langs:
  - csharp
  - vb
  name: GetPluginByUuid(string, bool)
  nameWithType: PublicPluginManager.GetPluginByUuid(string, bool)
  fullName: OnixRuntime.Plugin.PublicPluginManager.GetPluginByUuid(string, bool)
  type: Method
  source:
    remote:
      path: OnixRuntime/Plugin/PublicPluginManager.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: GetPluginByUuid
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Plugin/PublicPluginManager.cs
    startLine: 76
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Plugin
  summary: >-
    This tries to get the plugin by its uuid.

    When you store an instance of a plugin, you should store the uuid instead of the instance itself and call this method.

    When loading/unloading enabling/disabling plugins, the instance may be different or disappear for some time before coming back.

    This ensures you're always interacting with a plugin as optimally as possible.
  example: []
  syntax:
    content: public static IOnixPlugin? GetPluginByUuid(string uuid, bool lockPluginsLock = true)
    parameters:
    - id: uuid
      type: System.String
      description: The uuid to look for.
    - id: lockPluginsLock
      type: System.Boolean
      description: Defaults to true, set to false if you wish to lock the lock yourself.
    return:
      type: OnixRuntime.Plugin.IOnixPlugin
      description: The plugin or null.
    content.vb: Public Shared Function GetPluginByUuid(uuid As String, lockPluginsLock As Boolean = True) As IOnixPlugin
  overload: OnixRuntime.Plugin.PublicPluginManager.GetPluginByUuid*
  nameWithType.vb: PublicPluginManager.GetPluginByUuid(String, Boolean)
  fullName.vb: OnixRuntime.Plugin.PublicPluginManager.GetPluginByUuid(String, Boolean)
  name.vb: GetPluginByUuid(String, Boolean)
- uid: OnixRuntime.Plugin.PublicPluginManager.SetAndLoadConfig(System.String)
  commentId: M:OnixRuntime.Plugin.PublicPluginManager.SetAndLoadConfig(System.String)
  id: SetAndLoadConfig(System.String)
  parent: OnixRuntime.Plugin.PublicPluginManager
  langs:
  - csharp
  - vb
  name: SetAndLoadConfig(string)
  nameWithType: PublicPluginManager.SetAndLoadConfig(string)
  fullName: OnixRuntime.Plugin.PublicPluginManager.SetAndLoadConfig(string)
  type: Method
  source:
    remote:
      path: OnixRuntime/Plugin/PublicPluginManager.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: SetAndLoadConfig
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Plugin/PublicPluginManager.cs
    startLine: 84
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Plugin
  summary: Sets the configuration name and reloads all plugins.
  example: []
  syntax:
    content: public static void SetAndLoadConfig(string configName)
    parameters:
    - id: configName
      type: System.String
      description: The name of the config.
    content.vb: Public Shared Sub SetAndLoadConfig(configName As String)
  overload: OnixRuntime.Plugin.PublicPluginManager.SetAndLoadConfig*
  nameWithType.vb: PublicPluginManager.SetAndLoadConfig(String)
  fullName.vb: OnixRuntime.Plugin.PublicPluginManager.SetAndLoadConfig(String)
  name.vb: SetAndLoadConfig(String)
- uid: OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPlugins
  commentId: M:OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPlugins
  id: SaveRelevantPlugins
  parent: OnixRuntime.Plugin.PublicPluginManager
  langs:
  - csharp
  - vb
  name: SaveRelevantPlugins()
  nameWithType: PublicPluginManager.SaveRelevantPlugins()
  fullName: OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPlugins()
  type: Method
  source:
    remote:
      path: OnixRuntime/Plugin/PublicPluginManager.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: SaveRelevantPlugins
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Plugin/PublicPluginManager.cs
    startLine: 93
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Plugin
  summary: >-
    Saves all relevant plugins. Which means they are loaded. Unloaded plugins don't have any code running, or options shown to the user that need saving.

    Unloading, enabling and disabling a plugin saves the plugin and the options.
  example: []
  syntax:
    content: public static void SaveRelevantPlugins()
    content.vb: Public Shared Sub SaveRelevantPlugins()
  overload: OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPlugins*
- uid: OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPluginsInTheBackground
  commentId: M:OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPluginsInTheBackground
  id: SaveRelevantPluginsInTheBackground
  parent: OnixRuntime.Plugin.PublicPluginManager
  langs:
  - csharp
  - vb
  name: SaveRelevantPluginsInTheBackground()
  nameWithType: PublicPluginManager.SaveRelevantPluginsInTheBackground()
  fullName: OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPluginsInTheBackground()
  type: Method
  source:
    remote:
      path: OnixRuntime/Plugin/PublicPluginManager.cs
      branch: master
      repo: https://github.com/OnixClient/OnixDotnetRuntime
    id: SaveRelevantPluginsInTheBackground
    path: ../../../../../../../Users/jqms/source/repos/OnixDotnetRuntime/OnixRuntime/Plugin/PublicPluginManager.cs
    startLine: 99
  assemblies:
  - OnixRuntime
  namespace: OnixRuntime.Plugin
  summary: >-
    Saves all relevant plugins in the background. Which means they are loaded. Unloaded plugins don't have any code running, or options shown to the user that need saving.

    Unloading, enabling and disabling a plugin saves the plugin and the options.
  example: []
  syntax:
    content: public static void SaveRelevantPluginsInTheBackground()
    content.vb: Public Shared Sub SaveRelevantPluginsInTheBackground()
  overload: OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPluginsInTheBackground*
references:
- uid: OnixRuntime.Plugin
  commentId: N:OnixRuntime.Plugin
  href: OnixRuntime.html
  name: OnixRuntime.Plugin
  nameWithType: OnixRuntime.Plugin
  fullName: OnixRuntime.Plugin
  spec.csharp:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Plugin
    name: Plugin
    href: OnixRuntime.Plugin.html
  spec.vb:
  - uid: OnixRuntime
    name: OnixRuntime
    href: OnixRuntime.html
  - name: .
  - uid: OnixRuntime.Plugin
    name: Plugin
    href: OnixRuntime.Plugin.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OnixRuntime.Plugin.PublicPluginManager.PluginDirectory*
  commentId: Overload:OnixRuntime.Plugin.PublicPluginManager.PluginDirectory
  href: OnixRuntime.Plugin.PublicPluginManager.html#OnixRuntime_Plugin_PublicPluginManager_PluginDirectory
  name: PluginDirectory
  nameWithType: PublicPluginManager.PluginDirectory
  fullName: OnixRuntime.Plugin.PublicPluginManager.PluginDirectory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: OnixRuntime.Plugin.PublicPluginManager.GetPlugins(System.Boolean)
  commentId: M:OnixRuntime.Plugin.PublicPluginManager.GetPlugins(System.Boolean)
  isExternal: true
  href: OnixRuntime.Plugin.PublicPluginManager.html#OnixRuntime_Plugin_PublicPluginManager_GetPlugins_System_Boolean_
  name: GetPlugins(bool)
  nameWithType: PublicPluginManager.GetPlugins(bool)
  fullName: OnixRuntime.Plugin.PublicPluginManager.GetPlugins(bool)
  nameWithType.vb: PublicPluginManager.GetPlugins(Boolean)
  fullName.vb: OnixRuntime.Plugin.PublicPluginManager.GetPlugins(Boolean)
  name.vb: GetPlugins(Boolean)
  spec.csharp:
  - uid: OnixRuntime.Plugin.PublicPluginManager.GetPlugins(System.Boolean)
    name: GetPlugins
    href: OnixRuntime.Plugin.PublicPluginManager.html#OnixRuntime_Plugin_PublicPluginManager_GetPlugins_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: OnixRuntime.Plugin.PublicPluginManager.GetPlugins(System.Boolean)
    name: GetPlugins
    href: OnixRuntime.Plugin.PublicPluginManager.html#OnixRuntime_Plugin_PublicPluginManager_GetPlugins_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading.ReaderWriterLockSlim
  commentId: T:System.Threading.ReaderWriterLockSlim
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.readerwriterlockslim
  name: ReaderWriterLockSlim
  nameWithType: ReaderWriterLockSlim
  fullName: System.Threading.ReaderWriterLockSlim
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: OnixRuntime.Plugin.PublicPluginManager.GetDelegatesForEventInvocations*
  commentId: Overload:OnixRuntime.Plugin.PublicPluginManager.GetDelegatesForEventInvocations
  href: OnixRuntime.Plugin.PublicPluginManager.html#OnixRuntime_Plugin_PublicPluginManager_GetDelegatesForEventInvocations_System_Delegate___
  name: GetDelegatesForEventInvocations
  nameWithType: PublicPluginManager.GetDelegatesForEventInvocations
  fullName: OnixRuntime.Plugin.PublicPluginManager.GetDelegatesForEventInvocations
- uid: System.Delegate[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.delegate
  name: Delegate[]
  nameWithType: Delegate[]
  fullName: System.Delegate[]
  nameWithType.vb: Delegate()
  fullName.vb: System.Delegate()
  name.vb: Delegate()
  spec.csharp:
  - uid: System.Delegate
    name: Delegate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.delegate
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Delegate
    name: Delegate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.delegate
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Delegate}
  commentId: T:System.Collections.Generic.IEnumerable{System.Delegate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Delegate>
  nameWithType: IEnumerable<Delegate>
  fullName: System.Collections.Generic.IEnumerable<System.Delegate>
  nameWithType.vb: IEnumerable(Of Delegate)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Delegate)
  name.vb: IEnumerable(Of Delegate)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Delegate
    name: Delegate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.delegate
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Delegate
    name: Delegate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.delegate
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: OnixRuntime.Plugin.PublicPluginManager.GetPlugins*
  commentId: Overload:OnixRuntime.Plugin.PublicPluginManager.GetPlugins
  href: OnixRuntime.Plugin.PublicPluginManager.html#OnixRuntime_Plugin_PublicPluginManager_GetPlugins_System_Boolean_
  name: GetPlugins
  nameWithType: PublicPluginManager.GetPlugins
  fullName: OnixRuntime.Plugin.PublicPluginManager.GetPlugins
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable{OnixRuntime.Plugin.IOnixPlugin}
  commentId: T:System.Collections.Generic.IEnumerable{OnixRuntime.Plugin.IOnixPlugin}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IOnixPlugin>
  nameWithType: IEnumerable<IOnixPlugin>
  fullName: System.Collections.Generic.IEnumerable<OnixRuntime.Plugin.IOnixPlugin>
  nameWithType.vb: IEnumerable(Of IOnixPlugin)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OnixRuntime.Plugin.IOnixPlugin)
  name.vb: IEnumerable(Of IOnixPlugin)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: OnixRuntime.Plugin.IOnixPlugin
    name: IOnixPlugin
    href: OnixRuntime.Plugin.IOnixPlugin.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OnixRuntime.Plugin.IOnixPlugin
    name: IOnixPlugin
    href: OnixRuntime.Plugin.IOnixPlugin.html
  - name: )
- uid: OnixRuntime.Plugin.PublicPluginManager.GetPluginByUuid*
  commentId: Overload:OnixRuntime.Plugin.PublicPluginManager.GetPluginByUuid
  href: OnixRuntime.Plugin.PublicPluginManager.html#OnixRuntime_Plugin_PublicPluginManager_GetPluginByUuid_System_String_System_Boolean_
  name: GetPluginByUuid
  nameWithType: PublicPluginManager.GetPluginByUuid
  fullName: OnixRuntime.Plugin.PublicPluginManager.GetPluginByUuid
- uid: OnixRuntime.Plugin.IOnixPlugin
  commentId: T:OnixRuntime.Plugin.IOnixPlugin
  parent: OnixRuntime.Plugin
  href: OnixRuntime.Plugin.IOnixPlugin.html
  name: IOnixPlugin
  nameWithType: IOnixPlugin
  fullName: OnixRuntime.Plugin.IOnixPlugin
- uid: OnixRuntime.Plugin.PublicPluginManager.SetAndLoadConfig*
  commentId: Overload:OnixRuntime.Plugin.PublicPluginManager.SetAndLoadConfig
  href: OnixRuntime.Plugin.PublicPluginManager.html#OnixRuntime_Plugin_PublicPluginManager_SetAndLoadConfig_System_String_
  name: SetAndLoadConfig
  nameWithType: PublicPluginManager.SetAndLoadConfig
  fullName: OnixRuntime.Plugin.PublicPluginManager.SetAndLoadConfig
- uid: OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPlugins*
  commentId: Overload:OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPlugins
  href: OnixRuntime.Plugin.PublicPluginManager.html#OnixRuntime_Plugin_PublicPluginManager_SaveRelevantPlugins
  name: SaveRelevantPlugins
  nameWithType: PublicPluginManager.SaveRelevantPlugins
  fullName: OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPlugins
- uid: OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPluginsInTheBackground*
  commentId: Overload:OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPluginsInTheBackground
  href: OnixRuntime.Plugin.PublicPluginManager.html#OnixRuntime_Plugin_PublicPluginManager_SaveRelevantPluginsInTheBackground
  name: SaveRelevantPluginsInTheBackground
  nameWithType: PublicPluginManager.SaveRelevantPluginsInTheBackground
  fullName: OnixRuntime.Plugin.PublicPluginManager.SaveRelevantPluginsInTheBackground
